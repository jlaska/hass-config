- id: '1617751546799'
  alias: Sunset (interior)
  description: Turn on interior lights when getting dark inside
  trigger:
  - platform: state
    entity_id: sensor.sun_phase
    attribute: blue_hour
    to: true
  - platform: state
    entity_id: sensor.sun_phase
    attribute: golden_hour
    to: true
  - platform: sun
    event: sunset
    offset: 0
  - platform: homeassistant
    event: start
  condition:
  - alias: Sun is setting
    condition: state
    entity_id: sun.sun
    attribute: rising
    state: false
  - condition: template
    value_template: "{{ state_attr(this.entity_id, 'last_triggered') is none  or \n
      \  ((state_attr(this.entity_id, 'last_triggered')|as_local).day != now().day)\n}}"
    alias: Confirm once per day
    enabled: true
  - condition: or
    conditions:
    - alias: Not triggered by homeassistant.start
      condition: template
      value_template: '{{ trigger.platform != ''homeassistant'' }}'
    - alias: Triggered by homeassistant.start
      condition: and
      conditions:
      - alias: Triggered by homeassistant.start
        condition: template
        value_template: '{{ trigger.platform == ''homeassistant'' }}'
      - condition: sun
        after: sunset
      - condition: state
        entity_id: sun.sun
        state: below_horizon
  action:
  - scene: scene.sunset
  - service: frontend.set_theme
    data:
      name: ios-dark-mode-light-blue
      mode: light
  - service: script.ge_switch_led_light
    data:
      node_value: 3
  mode: single
- id: '1617753489001'
  alias: Dawn (exterior)
  description: Turn off exterior lights before dawn (see also https://www.timeanddate.com/astronomy/dawn.html)
  trigger:
  - alias: Twilight (sun2)
    platform: state
    entity_id: sensor.sun_phase
    to:
    - Civil Twilight
    - Nautical Twilight
    - Astronomical Twilight
  - platform: homeassistant
    event: start
  condition:
  - alias: Sun is rising
    condition: state
    entity_id: sun.sun
    attribute: rising
    state: true
  - condition: template
    value_template: "{{ state_attr(this.entity_id, 'last_triggered') is none  or \n
      \  ((state_attr(this.entity_id, 'last_triggered')|as_local).day != now().day)\n}}"
    alias: Confirm once per day
  - condition: or
    conditions:
    - alias: Not triggered by homeassistant.start
      condition: template
      value_template: '{{ trigger.platform != ''homeassistant'' }}'
    - alias: Triggered by homeassistant.start
      condition: and
      conditions:
      - condition: template
        value_template: '{{ trigger.platform == ''homeassistant'' }}'
      - condition: sun
        after: sunrise
      - condition: state
        entity_id: sun.sun
        state: above_horizon
  action:
  - scene: scene.dawn
  mode: single
- id: '1617754756338'
  alias: Good Night (kids)
  description: Kids bedtime
  trigger:
  - platform: time
    at: input_datetime.lights_out_kids
  condition: []
  action:
  - scene: scene.kids_bedtime
  mode: single
- id: '1617890462942'
  alias: Aeon Minimote Remote Scene Control
  description: ''
  use_blueprint:
    path: freshcoast/zwave-js-aeon-labs-aeotec-minimote.yaml
    input:
      minimote_device: 11a628abf6a5848ed505e5dd3d9cfe26
      button_1_pressed:
      - service: light.toggle
        target:
          entity_id: light.master_bedroom_light
      button_2_pressed:
      - service: light.toggle
        target:
          entity_id: light.master_bedroom_fan_light
      button_3_pressed:
      - service: fan.toggle
        target:
          entity_id: fan.master_bedroom_fan
      button_4_pressed:
      - service: light.toggle
        target:
          entity_id: light.master_bedroom_nightstand
- id: '1617924990879'
  alias: Laundry Room Light - Activity
  description: ''
  use_blueprint:
    path: jlaska/motion_illuminance_activated_entity.yaml
    input:
      target_entity: light.laundry_room_light
      illuminance_cutoff: input_number.illumination_high
      time_limit_after: input_datetime.time_of_day_automation_start
      time_limit_before: input_datetime.time_of_day_automation_stop
      no_motion_wait: input_number.inactivity_timeout_short
      motion_sensor: binary_sensor.laundry_room_motion_occupancy
      illuminance_sensor: sensor.master_bedroom_motion_illuminance_lux
- id: '1617925080161'
  alias: Master Bathroom Light - Activity
  description: ''
  use_blueprint:
    path: jlaska/motion_illuminance_activated_entity.yaml
    input:
      target_entity: light.master_bathroom_light
      illuminance_cutoff: input_number.illumination_medium
      time_limit_after: input_datetime.time_of_day_automation_start
      time_limit_before: input_datetime.goodnight_start_time
      no_motion_wait: input_number.inactivity_timeout_short
      motion_sensor: binary_sensor.master_bathroom_motion_any
      illuminance_sensor: sensor.master_bedroom_motion_illuminance_lux
- id: '1617970121884'
  alias: Garage Light - Activity
  description: ''
  trigger:
  - platform: state
    entity_id:
    - cover.garage_door_shelly
    to: opening
  - platform: state
    entity_id:
    - binary_sensor.garage_motion_occupancy
    to: 'on'
  - platform: state
    entity_id:
    - binary_sensor.garage_protect_motion
    to: 'on'
  - platform: state
    entity_id:
    - binary_sensor.mudroom_door_contact
    to: 'on'
  condition: []
  action:
  - service: light.turn_on
    target:
      area_id: mudroom
      entity_id: light.garage_light
    data: {}
  - delay:
      minutes: '{{ states(''input_number.inactivity_timeout_short'')|int(0) }}'
  - wait_template: "{{ is_state('binary_sensor.garage_motion_any', 'off')\n   and
      is_state('binary_sensor.mudroom_door_contact', 'off') \n   and is_state('cover.garage_door_shelly',
      'closed')\n}} "
    continue_on_timeout: false
  - service: light.turn_off
    target:
      entity_id: light.garage_light
    data: {}
  - condition: state
    entity_id: automation.mudroom_activity
    state: 0
    attribute: current
  - service: light.turn_off
    target:
      entity_id: light.mudroom_light
    data: {}
  mode: restart
- id: '1617977378814'
  alias: Downstairs Illuminance Above Threshold
  description: When it gets bright outside, turn certain lights off
  trigger:
  - platform: numeric_state
    for: 00:20:00
    entity_id: sensor.kitchen_motion_illuminance_lux
    above: input_number.illumination_medium
  condition:
  - condition: time
    after: input_datetime.time_of_day_automation_start
    before: '15:00:00'
    enabled: false
  - condition: sun
    before: sunset
    after: sunrise
    enabled: false
  - condition: state
    entity_id: sun.sun
    state: above_horizon
  action:
  - service: light.turn_off
    data: {}
    target:
      entity_id:
      - light.kitchen_end_table_light_zha_group_0x0004
      - light.kitchen_cabinet_light
      - light.living_room_table_lamp
      - light.living_room_bookshelf
  mode: restart
- id: '1618002489309'
  alias: Master Bathroom - Button
  description: Toggle lights based on button presses
  use_blueprint:
    path: jlaska/zigbee_button_handler.yaml
    input:
      mqtt_sensor: sensor.master_bathroom_button_action
      zha_sensor:
      single_action:
      - service: light.toggle
        target:
          entity_id: light.master_bathroom_light
        data: {}
      double_action:
      - service: light.toggle
        target:
          entity_id: light.master_bathroom_shower_light
        data: {}
      hold_action:
      - service: fan.toggle
        target:
          entity_id: fan.master_bathroom_fan
        data: {}
- id: '1618002599661'
  alias: William's Room - Button
  description: ''
  use_blueprint:
    path: jlaska/zigbee_button_handler.yaml
    input:
      mqtt_sensor: sensor.william_s_room_button_action
      single_action:
      - service: light.toggle
        target:
          entity_id: light.williams_room_lamps_zha_group_0x0003
        data:
          transition: 1
          color_temp: 330
          brightness: 255
      double_action:
      - service: light.toggle
        target:
          entity_id: light.williams_room_light
        data: {}
      - service: light.turn_off
        target:
          entity_id:
          - light.william_s_room_fan_light
          - light.william_s_closet_light
        data: {}
      hold_action:
      - service: fan.toggle
        target:
          entity_id: fan.williams_room_fan
        data: {}
- id: '1618048885985'
  alias: Spot Lights - Door Activity
  description: Turn on spot lights when exterior door opens at night
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.back_door_contact
    - binary_sensor.front_door_contact
    - cover.garage_door_shelly
    to:
    - opening
    - open
    - 'on'
  condition:
  - condition: state
    entity_id: sun.sun
    state: below_horizon
  action:
  - alias: Turn exterior spot lights on
    service: light.turn_on
    target:
      entity_id:
      - light.back_spot_light
      - light.front_spot_light
    data: {}
  - alias: Wait until all exterior doors are closed
    wait_template: "{{ not expand(['binary_sensor.back_door_contact', 'binary_sensor.front_door_contact',
      'cover.garage_door_shelly'])\n  | rejectattr('state', 'in', ['off', 'closed'])\n
      \ | map(attribute='name') | list }}\n"
  - delay:
      hours: 0
      minutes: 5
      seconds: 0
      milliseconds: 0
  - alias: Turn exterior spot lights off
    service: light.turn_off
    target:
      entity_id:
      - light.back_spot_light
      - light.front_spot_light
    data: {}
  mode: restart
- id: '1618075117826'
  alias: Goodbye
  description: Everyone leaves home
  trigger:
  - platform: state
    entity_id:
    - person.james
    - person.shannon
    - person.kevin
    - person.thomas
    to: not_home
  condition:
  - condition: not
    conditions:
    - condition: state
      entity_id: person.james
      state: home
    - condition: state
      entity_id: person.shannon
      state: home
    - condition: state
      entity_id: person.kevin
      state: home
    - condition: state
      entity_id: person.thomas
      state: home
    alias: Confirm nobody home
  action:
  - alias: Turn off Harmony
    type: turn_off
    device_id: 5364ebdb1d63351833073f854e50a2b6
    entity_id: remote.hubname
    domain: remote
  - alias: Turn off Samsung TV
    service: media_player.turn_off
    data: {}
    target:
      entity_id: media_player.samsung_un55h7100
  - alias: Turn off all fans
    service: fan.turn_off
    target:
      entity_id: all
    data: {}
  - if:
    - condition: and
      conditions:
      - condition: state
        entity_id: binary_sensor.kitchen_dishwasher_status
        state: 'off'
      - condition: state
        entity_id: sensor.ms963932g_laundry_machine_state
        state: 'Off'
    then:
    - service: switch.turn_off
      data: {}
      target:
        entity_id: switch.hot_water_pump_switch_0
  - alias: Optionally wait for vacuum completion
    if:
    - condition: not
      conditions:
      - condition: state
        entity_id: vacuum.roomba
        state: docked
    then:
    - wait_for_trigger:
      - platform: state
        entity_id:
        - vacuum.roomba
        to: docked
      timeout:
        hours: 0
        minutes: 45
        seconds: 0
        milliseconds: 0
      continue_on_timeout: false
  - alias: Turn off interior lights
    service: light.turn_off
    target:
      entity_id: "{%- set exclude_entity_ids = area_entities('outside')|select('contains',\n'light.')|list
        -%} \n{{\n  (\n    states.light\n    | selectattr('state', 'eq', 'on')\n    |
        rejectattr('entity_id', 'in', exclude_entity_ids)\n    | map(attribute='entity_id')\n
        \   | list\n  )\n}}\n"
  mode: single
- id: '1618088888089'
  alias: Good Night
  description: Lights out when quiet at night
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.downstairs_motion_any
    to: 'off'
    for:
      minutes: '{{states(''input_number.inactivity_timeout_long'')|int }}'
  - platform: state
    entity_id:
    - schedule.goodnight_schedule
    to: 'on'
  condition:
  - condition: state
    entity_id: schedule.goodnight_schedule
    state: 'on'
  - alias: Assert no recent motion
    condition: state
    entity_id: binary_sensor.downstairs_motion_any
    state: 'off'
    for:
      minutes: '{{states(''input_number.inactivity_timeout_long'')|int }}'
  - alias: Assert evening
    condition: state
    entity_id: sun.sun
    state: below_horizon
  - alias: Assert Samsung TV is off
    condition: not
    conditions:
    - condition: state
      entity_id: media_player.samsung_un55h7100
      state: 'on'
  action:
  - service: light.turn_off
    data: {}
    target:
      area_id:
      - dining_room
      - entryway
      - guest_bathroom
      - guest_room
      - henry_s_room
      - kids_bathroom
      - kitchen
      - laundry_room
      - living_room
      - master_bathroom
      - master_bedroom
      - master_closet
      - mudroom
      - sunroom
      - william_s_room
  - service: fan.turn_off
    target:
      area_id:
      - living_room
      - sunroom
      - powder_room
    data: {}
  - service: homeassistant.turn_off
    data: {}
    target:
      entity_id:
      - switch.outdoor_plug_ge
      - group.back_deck_lights
  mode: single
- id: '1618103078420'
  alias: Watching A Movie
  description: ''
  trigger:
  - platform: state
    to: playing
    entity_id: media_player.plex_plex_for_apple_tv_apple_tv
  - platform: state
    entity_id: automation.watching_a_movie
    to: 'on'
  condition:
  - condition: state
    entity_id: sun.sun
    state: below_horizon
  - condition: state
    entity_id: media_player.plex_plex_for_apple_tv_apple_tv
    state: playing
  action:
  - service: light.turn_off
    data:
      area_id: living_room
  mode: single
- id: '1618275517438'
  alias: William’s Room - Daytime Inactivity
  description: ''
  trigger:
  - platform: state
    entity_id: binary_sensor.williams_protect_motion
    to: 'off'
    for:
      minutes: '{{ states(''input_number.inactivity_timeout_long'')|int }}'
  - platform: numeric_state
    entity_id: sun.sun
    attribute: elevation
    above: '4.0'
  - platform: time
    at: input_datetime.time_of_day_automation_start
  condition:
  - alias: Assert no recent motion
    condition: state
    entity_id: binary_sensor.williams_protect_motion
    state: 'off'
    for:
      minutes: '{{ states(''input_number.inactivity_timeout_long'')|int }}'
  - alias: Assert no recent motion
    condition: template
    value_template: "{{\n  expand(area_entities(area_id(this.entity_id)))\n    |selectattr('domain',
      'eq', 'binary_sensor')\n    |selectattr('attributes.device_class', 'defined')\n
      \   |selectattr('attributes.device_class', 'in', ['motion','occupancy'])\n    |selectattr('state',
      'eq', 'off')\n    |selectattr('last_changed', 'gt', utcnow() - timedelta(minutes=states('input_number.inactivity_timeout_long')|int
      ))\n    |map(attribute='entity_id')\n    |list|length > 0\n}}"
  - alias: Assert automation time constraints
    condition: time
    after: input_datetime.time_of_day_automation_start
    before: input_datetime.time_of_day_automation_stop
  - alias: Assert automation.sunset did not run
    condition: template
    value_template: "{{ \n  (state_attr('automation.sunset', 'last_triggered')|as_local).day
      != now().day\n}}\n"
  - alias: Assert a fan or light is on
    condition: template
    value_template: "{{\n  expand(area_entities(area_id(this.entity_id)))\n    |selectattr('domain',
      'in', ['light','fan'])\n    |selectattr('state', 'eq', 'on')\n    |list|length
      > 0\n}}"
  action:
  - service: light.turn_off
    data: {}
    target:
      area_id: william_s_room
  - service: fan.turn_off
    target:
      entity_id: fan.williams_room_fan
    data: {}
  mode: single
- id: '1618275716490'
  alias: Henry’s Room - Daytime Inactivity
  description: Turn off lights/fans if inactive for a period of time.
  trigger:
  - platform: state
    entity_id: binary_sensor.henrys_protect_motion
    to: 'off'
    for:
      minutes: '{{ states(''input_number.inactivity_timeout_medium'')|int }}'
  - platform: numeric_state
    entity_id: sun.sun
    attribute: elevation
    above: '4.0'
  - platform: time
    at: input_datetime.time_of_day_automation_start
  condition:
  - alias: Assert no recent motion
    condition: state
    entity_id: binary_sensor.henrys_protect_motion
    state: 'off'
    for:
      minutes: '{{ states(''input_number.inactivity_timeout_medium'')|int }}'
  - alias: Assert no recent motion
    condition: template
    value_template: "{{\n  expand(area_entities(area_id(this.entity_id)))\n    |selectattr('domain',
      'eq', 'binary_sensor')\n    |selectattr('attributes.device_class', 'defined')\n
      \   |selectattr('attributes.device_class', 'in', ['motion','occupancy'])\n    |selectattr('state',
      'eq', 'off')\n    |selectattr('last_changed', 'gt', utcnow() - timedelta(minutes=states('input_number.inactivity_timeout_medium')|int
      ))\n    |map(attribute='entity_id')\n    |list|length > 0\n}}"
  - alias: Assert daytime
    condition: state
    entity_id: sun.sun
    state: above_horizon
  - alias: Assert automation time constraints
    condition: time
    after: input_datetime.time_of_day_automation_start
    before: input_datetime.time_of_day_automation_stop
  - alias: Assert automation.sunset did not run
    condition: template
    value_template: "{{ \n  (state_attr('automation.sunset', 'last_triggered')|as_local).day
      != now().day\n}}"
  - alias: Assert a fan or light is on
    condition: template
    value_template: "{{\n  expand(area_entities(area_id(this.entity_id)))\n    |selectattr('domain',
      'in', ['light','fan'])\n    |selectattr('state', 'eq', 'on')\n    |list|length
      > 0\n}}"
  action:
  - service: light.turn_off
    target:
      area_id: henry_s_room
    data: {}
  - service: fan.turn_off
    target:
      entity_id: fan.henrys_room_fan
    data: {}
  mode: single
- id: '1618704455944'
  alias: Vacuum Cycle - Started
  description: A vacuum cycle has started
  trigger:
  - platform: state
    entity_id:
    - vacuum.roomba
    to: cleaning
    for:
      hours: 0
      minutes: 0
      seconds: 3
  condition:
  - alias: Is it dark in the area?
    condition: or
    conditions:
    - condition: numeric_state
      entity_id: sensor.dining_room_motion_illuminance_lux
      below: input_number.illumination_low
    - condition: numeric_state
      entity_id: sensor.kitchen_motion_illuminance_lux
      below: input_number.illumination_low
    - condition: state
      entity_id: sun.sun
      state: below_horizon
  - condition: state
    entity_id: vacuum.roomba
    state: cleaning
    for:
      hours: 0
      minutes: 0
      seconds: 0
  action:
  - scene: scene.robot_start
  mode: single
- id: '1618877720683'
  alias: Notify Garage Door Open at Sunset
  description: ''
  trigger:
  - platform: sun
    event: sunset
  condition:
  - condition: not
    conditions:
    - condition: state
      entity_id: cover.garage_door_shelly
      state: closed
  action:
  - service: notify.mobile_app_james_iphone
    data:
      title: Garage Door Open
      message: The garage door is still open after sunset
  - service: script.announce
    data:
      message: The garage door is open after sunset
  mode: single
- id: '1619438138688'
  alias: Mudroom - Activity
  description: Blueprint
  use_blueprint:
    path: jlaska/motion_illuminance_activated_entity.yaml
    input:
      no_motion_wait: input_number.inactivity_timeout_short
      target_entity: light.mudroom_light
      turn_off_blocker_entity: light.garage_light
      motion_sensor: binary_sensor.mudroom_motion_occupancy
- id: '1619438720780'
  alias: Back Door - Activity
  description: ''
  use_blueprint:
    path: jlaska/motion_illuminance_activated_entity.yaml
    input:
      illuminance_cutoff: input_number.illumination_low
      no_motion_wait: input_number.inactivity_timeout_short
      illuminance_sensor: sensor.kitchen_motion_illuminance_lux
      motion_sensor: binary_sensor.back_door_contact
      target_entity: light.sunroom_fan_light
- id: '1619441985700'
  alias: Front Door - Activity
  description: Trigger actions based on front door activity
  use_blueprint:
    path: jlaska/motion_illuminance_activated_entity.yaml
    input:
      target_entity: light.entryway_door_light
      no_motion_wait: input_number.inactivity_timeout_short
      motion_sensor: binary_sensor.front_door_contact,binary_sensor.front_door_protect_person_detected,binary_sensor.front_door_protect_doorbell
      illuminance_sensor: sensor.dining_room_motion_illuminance_lux
      illuminance_cutoff: input_number.illumination_very_low
- id: '1619447091981'
  alias: Dining Room Floor Lamp - Activity
  description: ''
  use_blueprint:
    path: jlaska/motion_illuminance_activated_entity.yaml
    input:
      turn_off_blocker_entity: light.entryway_hall_light
      illuminance_cutoff: input_number.illumination_very_low
      illuminance_sensor: sensor.dining_room_motion_illuminance_lux
      no_motion_wait: input_number.inactivity_timeout_short
      target_entity: scene.dining_room_activity
      target_off_entity: light.dining_room_floor_lamp
      motion_sensor: binary_sensor.dining_room_motion_any
- id: '1619530751693'
  alias: Sunrise (interior)
  description: ''
  trigger:
  - platform: sun
    event: sunrise
    offset: 0
  - platform: homeassistant
    event: start
    id: homeassistant
  condition:
  - alias: Sun is rising
    condition: state
    entity_id: sun.sun
    attribute: rising
    state: true
  - condition: state
    entity_id: sun.sun
    state: above_horizon
    enabled: false
  - condition: template
    value_template: "{{ state_attr(this.entity_id, 'last_triggered') is none  or \n
      \  ((state_attr(this.entity_id, 'last_triggered')|as_local).day != now().day)\n}}"
    alias: Confirm once per day
  - condition: or
    conditions:
    - alias: Not triggered by homeassistant.start
      condition: template
      value_template: '{{ trigger.platform != ''homeassistant'' }}'
    - alias: Triggered by homeassistant.start
      condition: and
      conditions:
      - condition: template
        value_template: '{{ trigger.platform == ''homeassistant'' }}'
      - condition: sun
        after: sunrise
      - condition: state
        entity_id: sun.sun
        state: above_horizon
  action:
  - service: frontend.set_theme
    data:
      name: default
      mode: light
  - service: script.ge_switch_led_light
    data:
      node_value: 2
  mode: single
- id: '1619810016068'
  alias: Kids Bathroom Light - Activity
  description: ''
  use_blueprint:
    path: jlaska/motion_illuminance_activated_entity.yaml
    input:
      target_entity: light.kids_bathroom_light
      illuminance_cutoff: input_number.illumination_medium
      time_limit_after: input_datetime.time_of_day_automation_start
      time_limit_before: input_datetime.time_of_day_automation_stop
      no_motion_wait: input_number.inactivity_timeout_short
      motion_sensor: binary_sensor.kids_bathroom_motion_occupancy
      illuminance_sensor: sensor.kids_bathroom_motion_illuminance_lux
      turn_off_blocker_entity: binary_sensor.kids_bathroom_hygrostat
      turn_off_blocker_wait: input_number.inactivity_timeout_extralong
- id: '1620651897512'
  alias: Notify If Any Door Left Open
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.vs553419c_laundry_door
    - binary_sensor.attic_door_contact
    - binary_sensor.back_door_contact
    - binary_sensor.front_door_contact
    - binary_sensor.garage_freezer_door_contact
    - binary_sensor.kitchen_refrigerator_door_contact
    - binary_sensor.mudroom_door_contact
    to: 'on'
    for:
      hours: 0
      minutes: 5
      seconds: 0
  - platform: state
    entity_id:
    - binary_sensor.crawlspace_door_contact
    to: 'on'
    for:
      hours: 0
      minutes: 0
      seconds: 1
  condition: []
  action:
  - service: script.notify
    data:
      title: The {{ state_attr(trigger.entity_id, 'friendly_name') }} is open
      message: Please close the {{ state_attr(trigger.entity_id, 'friendly_name')
        }}
      data:
        group: notify-door-open
        tag: notify-door-open-{{ trigger.entity_id }}
  - service: script.announce
    data:
      critical: true
      message: The {{ state_attr(trigger.entity_id, 'friendly_name')|replace(' Contact','')
        }} is open
  - wait_template: '{{ is_state(trigger.entity_id, ''off'') }}'
    timeout: 0:15:00
    continue_on_timeout: false
  - service: script.notify
    data:
      title: ''
      message: clear_notification
      data:
        tag: notify-door-open-{{ trigger.entity_id }}
  - service: script.announce
    data:
      message: Thank you
  mode: parallel
  max: 6
- id: '1622157422281'
  alias: Guest Bathroom - Activity
  description: ''
  use_blueprint:
    path: jlaska/motion_illuminance_activated_entity.yaml
    input:
      illuminance_cutoff: input_number.illumination_medium
      time_limit_after: input_datetime.time_of_day_automation_start
      time_limit_before: input_datetime.goodnight_start_time
      no_motion_wait: input_number.inactivity_timeout_medium
      target_entity: light.guest_bathroom_light
      motion_sensor: binary_sensor.guest_bathroom_motion_occupancy
      illuminance_sensor: sensor.guest_bathroom_motion_illuminance_lux
      turn_off_blocker_entity: binary_sensor.guest_bathroom_hygrostat
      turn_off_blocker_wait: input_number.inactivity_timeout_extralong
- id: '1622209187653'
  alias: Guest Room - Button
  description: ''
  use_blueprint:
    path: jlaska/zigbee_button_handler.yaml
    input:
      mqtt_sensor: sensor.guest_room_button_action
      zha_sensor:
      single_action:
      - service: light.toggle
        target:
          entity_id: light.guest_room_nightstand
        data: {}
      double_action:
      - service: light.toggle
        target:
          entity_id: light.guest_room_fan_light
        data: {}
      hold_action:
      - service: fan.toggle
        target:
          entity_id: fan.guest_room_fan
        data: {}
- id: '1622383389825'
  alias: Dusk (exterior)
  description: Turn on exterior lights at dusk (see also https://www.timeanddate.com/astronomy/dusk.html)
  trigger:
  - alias: Twilight
    platform: state
    entity_id: sensor.sun_phase
    to:
    - Civil Twilight
    - Nautical Twilight
    - Astronomical Twilight
  - platform: homeassistant
    event: start
  condition:
  - alias: Sun is setting
    condition: state
    entity_id: sun.sun
    attribute: rising
    state: false
  - condition: template
    value_template: "{{ state_attr(this.entity_id, 'last_triggered') is none  or \n
      \  ((state_attr(this.entity_id, 'last_triggered')|as_local).day != now().day)\n}}"
    alias: Confirm once per day
  - condition: or
    conditions:
    - alias: Not triggered by homeassistant.start
      condition: template
      value_template: '{{ trigger.platform != ''homeassistant'' }}'
    - alias: Triggered by homeassistant.start
      condition: and
      conditions:
      - condition: template
        value_template: '{{ trigger.platform == ''homeassistant'' }}'
      - condition: sun
        after: sunrise
      - condition: state
        entity_id: sun.sun
        state: below_horizon
  action:
  - alias: Activate dusk scene
    scene: scene.dusk
  - alias: Activate holiday lights scene (optional)
    condition: template
    value_template: '{{ now().month == 12 }}'
  - scene: scene.holiday_lights
  mode: single
- id: '1624216187992'
  alias: Master Bedroom - Daytime Inactivity
  description: Turn off lights and fan when no occupancy detected
  trigger:
  - platform: state
    entity_id: binary_sensor.master_bedroom_motion_any
    to: 'off'
    for:
      minutes: '{{ states(''input_number.inactivity_timeout_short'')|int }}'
  - platform: state
    entity_id: binary_sensor.master_bedroom_workstation_sensor_vibration
    to: 'off'
    for:
      minutes: '{{ states(''input_number.inactivity_timeout_short'')|int }}'
  - platform: state
    entity_id:
    - calendar.work
    to: 'off'
    from: 'on'
  condition:
  - alias: Assert no recent motion
    condition: state
    entity_id: binary_sensor.master_bedroom_motion_any
    state: 'off'
    for:
      minutes: '{{ states(''input_number.inactivity_timeout_short'')|int }}'
  - condition: state
    entity_id: binary_sensor.master_bedroom_workstation_sensor_vibration
    state: 'off'
    alias: Assert no recent vibration
    for:
      minutes: '{{ states(''input_number.inactivity_timeout_short'')|int }}'
  - alias: Assert not currently in a meeting
    condition: state
    entity_id: calendar.work
    state: 'off'
    enabled: false
  - alias: Assert automation time constraints
    condition: time
    after: input_datetime.time_of_day_automation_start
    before: input_datetime.time_of_day_automation_stop
  - alias: Assert automation.sunset did not run
    condition: template
    value_template: "{{ \n  (state_attr('automation.sunset', 'last_triggered')|as_local).day
      != now().day\n}}"
    enabled: true
  - alias: Assert a fan or light is on
    condition: template
    value_template: "{{\n  expand(area_entities(area_id(this.entity_id)))\n    |selectattr('domain',
      'in', ['light','fan'])\n    |selectattr('state', 'eq', 'on')\n    |list|length
      > 0\n}}"
  action:
  - service: light.turn_off
    data: {}
    target:
      area_id: master_bedroom
  - service: fan.turn_off
    target:
      entity_id: fan.master_bedroom_fan
    data: {}
  mode: restart
- id: '1624216292589'
  alias: Guest Room - Daytime Inactivity
  description: ''
  trigger:
  - platform: state
    entity_id: binary_sensor.guest_room_motion_any
    to: 'off'
    for:
      minutes: '{{ states(''input_number.inactivity_timeout_long'')|int }}'
  - platform: numeric_state
    entity_id: sun.sun
    attribute: elevation
    above: '4.0'
  - platform: time
    at: input_datetime.time_of_day_automation_start
  condition:
  - alias: Assert no recent motion
    condition: state
    entity_id: binary_sensor.guest_room_motion_any
    state: 'off'
    for:
      minutes: '{{ states(''input_number.inactivity_timeout_long'')|int }}'
  - alias: Assert no recent motion
    condition: template
    value_template: "{{\n  expand(area_entities(area_id(this.entity_id)))\n    |selectattr('domain',
      'eq', 'binary_sensor')\n    |selectattr('attributes.device_class', 'defined')\n
      \   |selectattr('attributes.device_class', 'in', ['motion','occupancy'])\n    |selectattr('state',
      'eq', 'off')\n    |selectattr('last_changed', 'gt', utcnow() - timedelta(minutes=states('input_number.inactivity_timeout_long')|int
      ))\n    |map(attribute='entity_id')\n    |list|length > 0\n}}"
  - alias: Assert daytime
    condition: state
    entity_id: sun.sun
    state: above_horizon
  - alias: Assert automation time constraints
    condition: time
    after: input_datetime.time_of_day_automation_start
    before: input_datetime.time_of_day_automation_stop
  - alias: Assert automation.sunset did not run today
    condition: template
    value_template: "{{ \n  (state_attr('automation.sunset', 'last_triggered')|as_local).day
      != now().day\n}}\n"
  - alias: Assert a fan or light is on
    condition: template
    value_template: "{{\n  expand(area_entities(area_id(this.entity_id)))\n    |selectattr('domain',
      'in', ['light','fan'])\n    |selectattr('state', 'eq', 'on')\n    |list|length
      > 0\n}}"
  action:
  - service: light.turn_off
    data: {}
    target:
      area_id:
      - guest_room
      - guest_bathroom
  - service: fan.turn_off
    target:
      area_id: guest_room
    data: {}
  mode: single
- id: '1624222738706'
  alias: Bathroom Fan/Light - Timer
  description: Turn off bathroom lights/fans after a period of time
  trigger:
  - platform: state
    entity_id:
    - light.shannon_s_closet_light
    - light.james_closet_light
    - light.william_s_closet_light
    - light.guest_room_closet_light
    - light.under_stair_light
    - fan.powder_room_fan
    - fan.master_bathroom_toilet_fan
    - fan.guest_bathroom_fan
    - fan.kids_bathroom_fan
    - fan.master_bathroom_fan
    to: 'on'
    for:
      minutes: '{{ states(''input_number.inactivity_timeout_medium'')|int }}'
  - platform: state
    entity_id:
    - fan.sunroom_fan
    - light.upstairs_hallway_light
    - light.stairway_light
    - light.attic_light
    - light.attic_stairway_light
    to: 'on'
    for:
      minutes: '{{ states(''input_number.inactivity_timeout_long'')|int }}'
  condition:
  - alias: Determine whether trigger will be handled by another automation
    condition: not
    conditions:
    - condition: or
      conditions:
      - condition: template
        value_template: "{{ trigger.entity_id == 'fan.master_bathroom_fan' and\n  is_state('binary_sensor.master_bathroom_hygrostat',
          'on') }}\n"
      - condition: template
        value_template: "{{ trigger.entity_id == 'fan.guest_bathroom_fan' and\n  is_state('binary_sensor.guest_bathroom_hygrostat',
          'on') }}\n"
      - condition: template
        value_template: "{{ trigger.entity_id == 'fan.kids_bathroom_fan' and\n  is_state('binary_sensor.kids_bathroom_hygrostat',
          'on') }}\n"
      - condition: template
        value_template: "{{ trigger.entity_id == 'fan.sunroom_fan' and\n  is_state('binary_sensor.sunroom_motion_any',
          'on') }}\n"
    enabled: false
  - alias: Assert no humidity detected in area
    condition: template
    value_template: "{{ expand(area_entities(area_id(trigger.entity_id)))\n    |selectattr('entity_id',
      'match', '.*_hygrostat$')\n    |selectattr('state', 'eq', 'on')\n    |list\n
      \   |length == 0 }}"
  - alias: Assert no occupancy detected in area
    condition: template
    value_template: "{{ expand(area_entities(area_id(trigger.entity_id)))\n    |selectattr('attributes.device_class','defined')\n
      \   |selectattr('attributes.device_class', 'in', ['motion','occupancy'])\n    |selectattr('state',
      'eq', 'on')\n    |list\n    |length == 0 }}"
    enabled: false
  action:
  - service: homeassistant.turn_off
    target:
      entity_id: '{{ trigger.to_state.entity_id }}'
  mode: parallel
  max: 8
- id: '1624750206254'
  alias: Master Bathroom Shower Light - Activity
  description: Turn on Shower light during shower time in the evening
  use_blueprint:
    path: jlaska/motion_illuminance_activated_entity.yaml
    input:
      motion_sensor: binary_sensor.master_bathroom_motion_occupancy
      target_entity: light.master_bathroom_shower_light
      time_limit_after: input_datetime.time_of_day_shower_automation_start
      time_limit_before: input_datetime.time_of_day_automation_stop
      no_motion_wait: input_number.inactivity_timeout_medium
      turn_off_blocker_entity: binary_sensor.master_bathroom_hygrostat
      turn_off_blocker_wait: input_number.inactivity_timeout_long
- id: '1625665304293'
  alias: Laundry Cycle Finished
  description: Notify when a laundry cycle has finished
  trigger:
  - platform: state
    to: Finished
    for:
      hours: 0
      minutes: 0
      seconds: 5
    entity_id:
    - sensor.ms963932g_laundry_machine_state
    - sensor.vs553419c_laundry_machine_state
  condition: []
  action:
  - service: script.announce
    data:
      message: The {{ trigger.to_state.entity_id == 'sensor.vs553419c_laundry_machine_state'
        and states('sensor.vs553419c_laundry_cycle') or states('sensor.ms963932g_laundry_cycle')
        }} cycle of the {{ state_attr(trigger.to_state.entity_id, 'friendly_name')|replace('State','')|replace('VS553419C','')|replace('MS963932G','')
        }} has finished
  mode: parallel
  max: 2
- id: '1625752603984'
  alias: Water Leak Detected
  description: Water leak detection
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.laundry_room_washer_leak_water_leak
    - binary_sensor.laundry_room_dryer_leak_water_leak
    - binary_sensor.kitchen_sink_leak_water_leak
    to: 'on'
  condition: []
  action:
  - alias: Turn off washing machine (optionally)
    if:
    - condition: template
      value_template: '{{ area_id(trigger.entity_id) == ''laundry_room'' }}'
    then:
    - service: switch.turn_off
      data: {}
      target:
        entity_id: switch.laundry_room_washer_plug_centralite_switch
  - alias: Critical phone alert
    service: script.notify
    data:
      title: Water Leak Detected
      message: A water leak was detected by {{ state_attr(trigger.to_state.entity_id,
        'friendly_name') }} at {{ as_timestamp(state_attr(this.entity_id, 'last_triggered'))|timestamp_custom('%I:%M
        %p') }}
      data:
        group: water-leak
        tag: water-leak
        push:
          sound:
            name: default
            critical: 1
            volume: 1
  - alias: Speaker announcement
    service: script.announce
    data:
      entity_id: media_player.all_speakers
      message: A leak was detected in the {{ area_name(trigger.entity_id) }}
  - wait_template: '{{ is_state(trigger.entity_id, ''off'') }}'
    timeout: '2:00:00'
  - service: script.announce
    data:
      entity_id: media_player.all_speakers
      message: The water leak has cleared
  - service: script.notify
    data:
      title: ''
      message: clear_notification
      data:
        tag: water-leak
  mode: single
- id: '1629366808660'
  alias: Update Available Notification
  description: ''
  trigger:
  - platform: state
    from: 'off'
    to: 'on'
    entity_id:
    - binary_sensor.docker_hub_update_available
  - platform: state
    entity_id: sensor.hacs
    to:
  - platform: homeassistant
    event: start
  condition:
  - condition: or
    conditions:
    - condition: template
      value_template: '{{ trigger.platform == ''state'' and is_state(''binary_sensor.docker_hub_update_available'',
        ''on'')}}'
    - condition: template
      value_template: '{{ trigger.platform == ''state'' and states(''sensor.hacs'')|int(0)
        > 0}}'
    - condition: template
      value_template: '{{ trigger.platform == ''homeassistant'' and is_state(''binary_sensor.docker_hub_update_available'',
        ''on'')}}'
  action:
  - variables:
      update_name: "{% if trigger.entity_id == 'sensor.hacs' %}\n  {{ state_attr('sensor.hacs',
        'repositories')[-1]['display_name'] }}\n{% elif trigger.entity_id == 'binary_sensor.docker_hub_update_available'
        %}\n  Home Assistant\n{% else %}\n  {{ is_state('binary_sensor.docker_hub_update_available',\n
        \ 'on') and 'Home Assistant' or state_attr('sensor.hacs',\n  'repositories')[-1]['display_name']
        }}\n{% endif %}"
      update_version: "{% if trigger.entity_id == 'sensor.hacs' %}\n  {{ state_attr('sensor.hacs',
        'repositories')[-1]['available_version'] }}\n{% elif trigger.entity_id ==
        'binary_sensor.docker_hub_update_available' %}\n  {{ states('sensor.docker_hub')
        }}\n{% else %}\n  {{ is_state('binary_sensor.docker_hub_update_available',\n
        \ 'on') and states('sensor.docker_hub') or\n  state_attr('sensor.hacs', 'repositories')[-1]['available_version']
        }}\n{% endif %}"
      update_url: "{% if trigger.entity_id == 'sensor.hacs' %}\n  /hacs\n{% elif trigger.entity_id
        == 'binary_sensor.docker_hub_update_available' %}\n  {{ state_attr('sensor.home_assistant_website','release_notes')
        }}\n{% else %}\n  {{ is_state('binary_sensor.docker_hub_update_available',\n
        \ 'on') and\n  state_attr('sensor.home_assistant_website','release_notes')
        or\n  '/hacs'}}\n{% endif %}"
  - service: notify.mobile_app_james_iphone
    data:
      title: Update Available
      message: 'A new {{ update_name }} release is now available ({{ update_version
        }})

        '
      data:
        tag: home_assistant_update
        url: '{{ update_url }}'
  - service: notify.persistent_notification
    data:
      title: Update Available
      message: 'A new {{ update_name }} release is now available ( [{{ update_version
        }}]({{ update_url }}) )

        '
  mode: single
- id: '1629811616934'
  alias: Master Bedroom Ceiling Fan - Activity
  description: Turn on/off fan automatically based on temperature and time of day
  trigger:
  - platform: state
    to: 'on'
    for:
      hours: 0
      minutes: 1
      seconds: 0
    entity_id:
    - binary_sensor.master_bedroom_motion_any
  condition:
  - condition: state
    entity_id: sun.sun
    state: above_horizon
    for:
      hours: 0
      minutes: 0
      seconds: 0
      milliseconds: 0
  - condition: numeric_state
    above: 76
    entity_id: sensor.master_bathroom_weather_temperature
  - condition: time
    weekday:
    - mon
    - tue
    - wed
    - thu
    - fri
    - sat
    - sun
    before: '17:00:00'
    after: input_datetime.time_of_day_automation_start
  action:
  - service: fan.turn_on
    target:
      entity_id: fan.master_bedroom_fan
    data: {}
  mode: single
- id: '1630371041263'
  alias: Henry’s Room - Button
  description: 'Toggle devices based on button presses '
  use_blueprint:
    path: jlaska/zigbee_button_handler.yaml
    input:
      mqtt_sensor: sensor.henry_s_room_button_action
      single_action:
      - service: light.toggle
        target:
          entity_id: light.henrys_room_lamps_zha_group_0x0002
        data:
          transition: 1
          brightness: 255
          color_temp: 330
      double_action:
      - service: light.toggle
        target:
          entity_id: light.henrys_room_light
        data: {}
      - service: light.turn_off
        target:
          entity_id:
          - light.henry_s_room_fan_light
          - group.henry_s_room_closet_light
        data: {}
      release_action: []
      hold_action:
      - service: fan.toggle
        target:
          entity_id: fan.henrys_room_fan
        data: {}
- id: '1630755323301'
  alias: Piano Time
  description: Turn or/off lights when playing piano
  trigger:
  - platform: numeric_state
    entity_id: sensor.dining_room_plug_samjin_electricalmeasurement
    for:
      hours: 0
      minutes: 0
      seconds: 1
    above: 0.5
  condition: []
  action:
  - scene: scene.piano_time
  - wait_for_trigger:
    - platform: numeric_state
      entity_id: sensor.dining_room_plug_samjin_electricalmeasurement
      for:
        hours: 0
        minutes: 0
        seconds: 3
      below: 0.5
    continue_on_timeout: false
    timeout:
      hours: 1
      minutes: 0
      seconds: 0
      milliseconds: 0
  - service: script.announce
    data:
      message: 'That was the best piano I''ve heard all {{ now().strftime(''%A'')
        }}.  Thank you!

        '
  - service: light.turn_off
    target:
      area_id:
      - dining_room
      - entryway
      entity_id: light.stairway_light
    data: {}
  mode: restart
- id: '1631050114594'
  alias: Bathroom Fan - Humidity
  description: Turn on/off bathroom fans based on humidity sensor state
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.master_bathroom_hygrostat
    - binary_sensor.kids_bathroom_hygrostat
    - binary_sensor.guest_bathroom_hygrostat
    to:
  condition:
  - condition: template
    value_template: '{{ trigger.to_state.state != trigger.from_state.state }}'
  action:
  - alias: Turn on/off any fan found in the same area_id
    service: fan.turn_{{ states(trigger.to_state.entity_id) }}
    target:
      area_id: '{{ area_id(trigger.entity_id) }}

        '
  mode: parallel
  max: 4
- id: '1631220675733'
  alias: Notify Zone Geofence
  description: Notify based on who enters and leaves a zone
  trigger:
  - platform: zone
    entity_id:
    - person.james
    - person.shannon
    zone: zone.home
    event: enter
  - platform: zone
    entity_id:
    - person.james
    - person.shannon
    zone: zone.home
    event: leave
  - platform: zone
    entity_id:
    - person.shannon
    zone: zone.ncdg
    event: leave
  - platform: zone
    entity_id:
    - person.james
    zone: zone.rht
    event: leave
  - platform: zone
    entity_id:
    - person.james
    - person.shannon
    zone: zone.xl_sports
    event: enter
  - platform: zone
    entity_id:
    - person.james
    - person.shannon
    zone: zone.xl_sports
    event: leave
  - platform: zone
    entity_id:
    - person.james
    - person.shannon
    zone: zone.xl_soccer
    event: enter
  - platform: zone
    entity_id:
    - person.james
    - person.shannon
    zone: zone.xl_soccer
    event: leave
  - platform: zone
    entity_id:
    - person.james
    - person.shannon
    zone: zone.ncma
    event: enter
  - platform: zone
    entity_id:
    - person.james
    - person.shannon
    zone: zone.ncma
    event: leave
  - platform: zone
    entity_id:
    - person.james
    - person.shannon
    zone: zone.trc
    event: enter
  - platform: zone
    entity_id:
    - person.james
    - person.shannon
    zone: zone.trc
    event: leave
  condition: []
  action:
  - service: script.turn_on
    target:
      entity_id: script.announce
    data:
      variables:
        message: '{{ state_attr(trigger.entity_id, ''friendly_name'') }} {{ trigger.event
          == ''leave'' and ''left'' or ''arrived at'' }} {{ state_attr(trigger.zone.entity_id,
          ''friendly_name'') }}'
  - service: script.turn_on
    target:
      entity_id: script.zone_geofence_light_pulse
    data:
      variables:
        trigger_event: '{{ trigger.event }}'
        trigger_zone: '{{ trigger.zone.entity_id }}'
        trigger_person: '{{ trigger.entity_id }}'
  - service: script.turn_on
    target:
      entity_id: script.zone_geofence_notification
    data:
      variables:
        trigger_event: '{{ trigger.event }}'
        trigger_zone: '{{ trigger.zone.entity_id }}'
        trigger_person: '{{ trigger.entity_id }}'
  mode: single
- id: '1632007420377'
  alias: Welcome home
  description: Trigger actions when someone returns home.
  trigger:
  - platform: zone
    entity_id:
    - person.james
    - person.shannon
    zone: zone.home
    event: enter
  condition: []
  action:
  - if:
    - condition: state
      entity_id: schedule.hot_water_pump
      state: 'on'
    then:
    - service: switch.turn_on
      data: {}
      target:
        entity_id: switch.hot_water_pump_switch_0
  - if:
    - alias: Before kids lights out
      condition: time
      before: input_datetime.lights_out_kids
      after: 00:00:00
    - alias: Did the sunset automation already trigger today
      condition: template
      value_template: '{{ (state_attr(''automation.sunset'', ''last_triggered'')|as_local).day
        == now().day }}'
    then:
    - scene: scene.sunset
  mode: single
- id: '1634814893252'
  alias: Front Door - Exterior Activity
  description: Trigger events based on front door exterior activity
  use_blueprint:
    path: jlaska/motion_illuminance_activated_entity.yaml
    input:
      no_motion_wait: input_number.inactivity_timeout_short
      motion_sensor:
      - binary_sensor.front_door_contact
      - binary_sensor.front_door_protect_person_detected
      - binary_sensor.front_door_protect_doorbell
      target_entity: light.front_door_light
      blocker_entity: light.garage_exterior_light
      turn_off_blocker_entity: light.garage_exterior_light
      illuminance_sensor: sensor.keener_illuminance_lux
      illuminance_cutoff: input_number.illumination_high
- id: '1638199338566'
  alias: Master Bedroom - Button
  description: Aqara Wireless Switch (single, double, hold)
  use_blueprint:
    path: jlaska/zigbee_button_handler.yaml
    input:
      mqtt_sensor:
      - sensor.master_bedroom_left_button_action
      - sensor.master_bedroom_right_button_action
      zha_sensor:
      single_action:
      - service: light.toggle
        target:
          entity_id: light.master_bedroom_nightstand
        data: {}
      double_action:
      - service: light.toggle
        target:
          entity_id: light.master_bedroom_light
        data: {}
      - service: light.turn_off
        target:
          entity_id: light.master_bedroom_fan_light
        data: {}
      hold_action:
      - service: fan.toggle
        data: {}
        target:
          entity_id: fan.master_bedroom_fan
      release_action: []
- id: '1639618452473'
  alias: Master Bathroom Light - Double Tap
  description: ''
  use_blueprint:
    path: jlaska/zwave_js_ge_switch_event_handler.yaml
    input:
      device: 98c706574bccaab03950f857a02451d9
      double_tap_on:
      - service: light.turn_on
        target:
          area_id:
          - master_bathroom
          - master_closet
        data: {}
      double_tap_off:
      - service: light.turn_off
        target:
          area_id:
          - master_closet
          - master_bathroom
        data: {}
- id: '1639944886830'
  alias: Williams Room Light - Double Tap
  description: ''
  use_blueprint:
    path: jlaska/zwave_js_ge_switch_event_handler.yaml
    input:
      device: e886cf686b24935ac3ba4ef19ce35dd9
      double_tap_on:
      - service: light.turn_on
        target:
          area_id: william_s_room
        data:
          color_temp: 330
          brightness: 255
      double_tap_off:
      - service: light.turn_off
        target:
          area_id: william_s_room
        data: {}
- id: '1639947431355'
  alias: Henrys Room Light - Double Tap
  description: ''
  use_blueprint:
    path: jlaska/zwave_js_ge_switch_event_handler.yaml
    input:
      device: c1607f9a9b672e2ea111d8c56fb3901e
      double_tap_on:
      - service: light.turn_on
        target:
          area_id: henry_s_room
        data:
          color_temp: 330
          brightness: 255
      double_tap_off:
      - service: light.turn_off
        target:
          area_id: henry_s_room
        data: {}
- id: '1640023160697'
  alias: Front Door - Doorbell Greeting
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.front_door_protect_doorbell
    to: 'on'
  condition: []
  action:
  - if:
    - condition: template
      value_template: '{{ now().month == 10 }}'
    then:
    - service: media_player.play_media
      data:
        media_content_type: music
        media_content_id: "{{\n  ('media-source://media_source/sounds/Halloween-theme-doorbell-sound.mp3',\n
          \  'media-source://media_source/sounds/i-see-you-alternate.mp3',\n   'media-source://media_source/sounds/Haunted-whoosh-sound-effect.mp3',\n
          \  'media-source://media_source/sounds/Scary-animal-noises.mp3',\n   'media-source://media_source/sounds/Screeching-horror-cinematic-sound.mp3',\n
          \  'media-source://media_source/sounds/Horror-breath-with-long-reverb-sound-effect.mp3',\n
          \  'media-source://media_source/sounds/Heart-beat-sound-effect.mp3',\n   'media-source://media_source/sounds/Horror-sound-effect.mp3',)|random\n}}\n"
      target:
        entity_id: media_player.front_door_protect_speaker
  - if:
    - condition: template
      value_template: '{{ now().month == 12 }}'
    then:
    - service: media_player.play_media
      data:
        media_content_type: music
        media_content_id: "{('media-source://media_source/sounds/Christmas-bells-doorbell.mp3',\n
          \ 'media-source://media_source/sounds/Christmas-doorbell-jingle-bells.mp3',\n
          \ 'media-source://media_source/sounds/Christmas-doorbell-melody.mp3',\n
          \ 'media-source://media_source/sounds/Christmas-doorbell-sound.mp3',\n  'media-source://media_source/sounds/Christmas-music-doorbell.mp3',\n
          \ 'media-source://media_source/sounds/Santa_Merry_Christmas.mp3',)|random}}"
      target:
        entity_id: media_player.front_door_protect_speaker
  mode: single
- id: '1641050133796'
  alias: Entryway Hall Light - Double Tap
  description: ''
  use_blueprint:
    path: jlaska/zwave_js_ge_switch_event_handler.yaml
    input:
      device: 2ac64cb1a200b66dbf268c0d475ed532
      double_tap_on:
      - service: light.turn_on
        target:
          area_id:
          - entryway
          - dining_room
        data: {}
      double_tap_off:
      - service: light.turn_off
        target:
          area_id:
          - dining_room
          - entryway
        data: {}
- id: '1641313962210'
  alias: Weather Image Downloader
  description: ''
  trigger:
  - platform: time_pattern
    hours: /1
  condition: []
  action:
  - repeat:
      while:
      - alias: Loop images to download
        condition: template
        value_template: '{{ repeat.index <= images|length }}'
      sequence:
      - service: downloader.download_file
        data:
          url: '{{ images[repeat.index - 1][''url''] }}'
          filename: '{{ images[repeat.index - 1][''entity_id''] }}'
          overwrite: true
      - service: local_file.update_file_path
        data:
          entity_id: '{{ images[repeat.index - 1][''entity_id''] }}'
          file_path: /config/www/{{ images[repeat.index - 1]['entity_id'] }}
  mode: single
  variables:
    images:
    - url: '{{ states(''input_text.url_weather_local_doplar'') }}'
      entity_id: camera.weather_local_doplar
    - url: '{{ states(''input_text.url_weather_local_forecast'') }}'
      entity_id: camera.weather_local_forecast
    - url: '{{ states(''input_text.url_weather_noaa_us_east_coast'') }}'
      entity_id: camera.weather_noaa_us_east_coast
    - url: '{{ states(''input_text.url_weather_noaa_us_southeast'') }}'
      entity_id: camera.weather_noaa_us_southeast
    - url: '{{ states(''input_text.url_weather_noaa_us_continent'') }}'
      entity_id: camera.weather_noaa_us_continent
- id: '1641679968022'
  alias: Powder Room - Activity
  description: ''
  use_blueprint:
    path: jlaska/motion_illuminance_activated_entity.yaml
    input:
      motion_sensor: binary_sensor.powder_room_motion_occupancy
      target_entity: light.powder_room_light
      no_motion_wait: input_number.inactivity_timeout_medium
- id: '1642538127999'
  alias: Garage Door - Notify When Open
  description: ''
  trigger:
  - platform: state
    entity_id:
    - cover.garage_door_shelly
    to: opening
  condition: []
  action:
  - service: script.notify
    data:
      title: Garage Door Open
      message: "The {{ state_attr(trigger.entity_id, 'friendly_name') }} opened \nat
        {{ as_timestamp(state_attr(this.entity_id,\n'last_triggered'))|timestamp_custom('%I:%M
        %p') }}\n"
      data:
        entity_id: camera.garage_protect_high
        group: garage-door
        tag: garage-door-open
  - wait_template: '{{ is_state(trigger.entity_id, ''closed'') }}'
    timeout: '2:00:00'
  - service: script.notify
    data:
      title: ''
      message: clear_notification
      data:
        tag: garage-door-open
  mode: single
- id: '1647367670259'
  alias: Master Bathroom Toilet - Activity
  description: ''
  use_blueprint:
    path: jlaska/motion_illuminance_activated_entity.yaml
    input:
      motion_sensor: binary_sensor.master_bathroom_toilet_motion_occupancy
      target_entity: light.master_bathroom_toilet_light
      no_motion_wait: input_number.inactivity_timeout_short
      time_limit_after: input_datetime.time_of_day_automation_start
      time_limit_before: input_datetime.goodnight_start_time
- id: '1649466447589'
  alias: Attic Door - Activity
  description: ''
  use_blueprint:
    path: jlaska/activity_and_inactivity_trigger.yaml
    input:
      trigger_entities:
        entity_id: binary_sensor.attic_door_contact
      turn_on_target:
        entity_id:
        - light.attic_light
        - light.attic_stairway_light
      illuminance_entity: sensor.keener_illuminance_lux
      turn_off_target:
        entity_id:
        - light.attic_light
        - light.attic_stairway_light
      turn_off_wait: input_number.inactivity_timeout_medium
      turn_on_illuminance_cutoff: input_number.illumination_high
- id: '1651594543069'
  alias: Open Garage Door Upon Arrival
  description: Open garage door when arriving home by car
  trigger:
  - platform: zone
    entity_id:
    - person.james
    zone: zone.home
    event: enter
  condition:
  - condition: template
    value_template: '{{ (trigger.entity_id == ''person.james'' and states(''sensor.james_iphone_activity'')
      in [''Automotive'', ''Cycling'']) }}

      '
  - condition: state
    entity_id: cover.garage_door_shelly
    state: closed
  - condition: state
    entity_id: schedule.quiet_time
    state: 'off'
  action:
  - service: cover.open_cover
    data: {}
    target:
      entity_id: cover.garage_door_shelly
  mode: single
- id: '1653526542536'
  alias: Henrys Fan Light - Double Tap
  description: ''
  use_blueprint:
    path: jlaska/zwave_js_ge_switch_event_handler.yaml
    input:
      device: 4c5eece593f50f19d28b840520ff2b00
      double_tap_on:
      - service: light.turn_on
        data:
          color_temp: 330
          brightness: 255
        target:
          entity_id: light.henrys_room_lamps_zha_group_0x0002
      double_tap_off:
      - service: light.turn_off
        target:
          entity_id:
          - light.henrys_room_lamps_zha_group_0x0002
        data:
          transition: 1
- id: '1653526677329'
  alias: Williams Fan Light - Double Tap
  description: ''
  use_blueprint:
    path: jlaska/zwave_js_ge_switch_event_handler.yaml
    input:
      device: 732d10456301be460b20349595756983
      double_tap_on:
      - service: light.turn_on
        data:
          color_temp: 330
          brightness: 255
        target:
          entity_id: light.williams_room_lamps_zha_group_0x0003
      double_tap_off:
      - service: light.turn_off
        data:
          transition: 1
        target:
          entity_id: light.williams_room_lamps_zha_group_0x0003
- id: '1655769646628'
  alias: Back Deck - Activity
  description: ''
  use_blueprint:
    path: jlaska/motion_illuminance_activated_entity.yaml
    input:
      motion_sensor:
      - binary_sensor.back_deck_protect_motion
      - binary_sensor.back_deck_protect_object_detected
      - binary_sensor.back_door_contact
      - binary_sensor.back_deck_protect_person_detected
      target_entity: scene.back_deck_activity
      no_motion_wait: input_number.inactivity_timeout_medium
      target_off_entity: group.back_deck_lights
      illuminance_sensor: sensor.keener_illuminance_lux
      illuminance_cutoff: input_number.illumination_low
- id: '1655993369268'
  alias: Notify If Any Power Plug Off
  description: ''
  trigger:
  - platform: state
    entity_id:
    - switch.garage_freezer_plug
    - switch.garage_chest_freezer_plug
    - switch.kitchen_refrigerator_plug
    - switch.microwave_plug
    - switch.laundry_room_washer_plug_centralite_switch
    - binary_sensor.grid_status
    - switch.hot_water_heater_switch_0
    to:
    - 'off'
    - unknown
    for:
      hours: 0
      minutes: 0
      seconds: 30
  condition: []
  action:
  - service: script.notify
    data:
      title: The {{ state_attr(trigger.entity_id, 'friendly_name') }} is off
      message: Please power on the {{ state_attr(trigger.entity_id, 'friendly_name')
        }}
      data:
        group: notify-power-off
        tag: notify-power-off-{{ trigger.entity_id }}
  - service: script.announce
    data:
      message: The {{ state_attr(trigger.entity_id, 'friendly_name')|replace(' Contact','')
        }} is off
  - wait_template: '{{ is_state(trigger.entity_id, ''on'') }}'
    timeout: 0:15:00
  - service: script.notify
    data:
      title: ''
      message: clear_notification
      data:
        tag: notify-power-off-{{ trigger.entity_id }}
  - service: script.announce
    data:
      message: The {{ state_attr(trigger.entity_id, 'friendly_name')|replace(' Contact','')
        }} has been restored
  mode: parallel
  max: 6
- id: '1656538179014'
  alias: Front Door - Person Announce
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.front_door_protect_person_detected
    to: 'on'
  condition:
  - condition: state
    state: 'off'
    for:
      hours: 0
      minutes: 15
      seconds: 0
    entity_id: binary_sensor.front_door_contact
  - condition: state
    entity_id: cover.garage_door_shelly
    for:
      hours: 0
      minutes: 15
      seconds: 0
    state: closed
  - condition: state
    entity_id: binary_sensor.front_door_protect_doorbell
    state: 'off'
    for:
      hours: 0
      minutes: 15
      seconds: 0
  - alias: Confirm Not Recently Triggered
    condition: template
    value_template: "{%- set last_triggered = state_attr(this.entity_id, 'last_triggered')
      or today_at('00:00') -%}\n{{ \n  utcnow() - timedelta(minutes=states('input_number.inactivity_timeout_medium')|int)
      > last_triggered\n}}"
  action:
  - service: script.announce
    data:
      message: Someone is at the front door
      critical: true
  mode: single
- id: '1662509874218'
  alias: Master Bedroom Light - Double Tap
  description: ''
  use_blueprint:
    path: jlaska/zwave_js_ge_switch_event_handler.yaml
    input:
      device: d7c9ce7e99d9ebc5bcdd364acfeb0535
      double_tap_on:
      - service: light.turn_on
        data: {}
        target:
          area_id: master_bedroom
      double_tap_off:
      - service: light.turn_off
        data: {}
        target:
          area_id: master_bedroom
- id: '1664929317664'
  alias: Henry’s Room Closet - Activity
  description: Turn on light based on door state
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.henrys_room_closet_door_contact
    to:
  condition: []
  action:
  - if:
    - '{{ trigger.to_state.state == ''on'' }}'
    then:
    - service: light.turn_on
      data:
        transition: 0
        brightness_pct: 100
        rgb_color:
        - 255
        - 219
        - 187
        effect: Solid
      target:
        entity_id: light.henrys_room_closet_light
    else:
    - alias: Turn on/off light
      service: light.turn_off
      target:
        entity_id: light.henrys_room_closet_light
      data: {}
  mode: restart
- id: '1665078195857'
  alias: Master Bathroom Shower Light - Double Tap
  description: ''
  use_blueprint:
    path: jlaska/zwave_js_ge_switch_event_handler.yaml
    input:
      device: 5ad5e7c5ca690d511daa6dcddd5a92af
      double_tap_on:
      - service: light.turn_on
        data: {}
        target:
          entity_id:
          - light.master_bathroom_shower_light
          - light.master_bathroom_light
      double_tap_off:
      - service: light.turn_off
        data: {}
        target:
          entity_id:
          - light.master_bathroom_shower_light
          - light.master_bathroom_light
- id: '1665923639357'
  alias: Under Stair - Button
  description: ''
  use_blueprint:
    path: jlaska/zigbee_button_handler.yaml
    input:
      mqtt_sensor: sensor.under_stair_button_action
      single_action:
      - service: light.toggle
        data:
          color_temp: 500
          brightness_pct: 100
        target:
          entity_id: light.under_stair_light
      double_action:
      - service: light.turn_on
        data:
          rgb_color:
          - 235
          - 77
          - 61
          brightness_pct: 100
        target:
          entity_id:
          - light.under_stair_light
- id: '1666351001427'
  alias: Kitchen Table Light - Double Tap
  description: ''
  use_blueprint:
    path: jlaska/zwave_js_ge_switch_event_handler.yaml
    input:
      device: 4f2217614439739cf3ccf55ac2d9737a
      double_tap_on:
      - service: light.turn_on
        data:
          brightness_pct: 100
        target:
          entity_id: light.kitchen_light
      double_tap_off:
      - service: light.turn_off
        data: {}
        target:
          entity_id: light.kitchen_light
- id: '1666903071185'
  alias: Home Assistant Start
  description: Trigger actions whenever home assistant starts
  trigger:
  - platform: homeassistant
    event: start
  condition: []
  action:
  - alias: Force Shelly Plus MQTT status update
    service: mqtt.publish
    data:
      topic: shelly-garagedoor/rpc
      payload: '{"id": 1, "src": "shelly-garagedoor/events", "method": "Input.GetStatus",
        "params": {"id": 0}}'
      qos: 0
      retain: false
  - alias: Conditionally turn on hot water pump
    if:
    - condition: and
      conditions:
      - condition: state
        entity_id: schedule.hot_water_pump
        state: 'on'
      - condition: state
        entity_id: switch.hot_water_pump_switch_0
        state: 'off'
    then:
    - service: switch.turn_on
      data: {}
      target:
        entity_id: switch.hot_water_pump_switch_0
  mode: single
- id: '1667351565058'
  alias: Stairway Light - Double Tap
  description: ''
  use_blueprint:
    path: jlaska/zwave_js_ge_switch_event_handler.yaml
    input:
      device: 9515c03c243d33db09c92eb49fae212f
      double_tap_on:
      - service: light.turn_on
        data: {}
        target:
          area_id: dining_room
      double_tap_off:
      - service: light.turn_off
        data: {}
        target:
          area_id:
          - dining_room
          - entryway
- id: '1667493802732'
  alias: Kitchen Light - Double Tap
  description: ''
  use_blueprint:
    path: jlaska/zwave_js_ge_switch_event_handler.yaml
    input:
      double_tap_on:
      - service: light.turn_on
        data:
          brightness_pct: 100
        target:
          area_id: kitchen
      double_tap_off:
      - service: light.turn_off
        data: {}
        target:
          area_id: kitchen
      device: 533032ace1f31a8cfec6c01a5793b151
- id: '1667506045683'
  alias: Living Room Light - Double Tap
  description: ''
  use_blueprint:
    path: jlaska/zwave_js_ge_switch_event_handler.yaml
    input:
      device: c1dca11d8f2cef4f93e46d8d18d04337
      double_tap_on:
      - service: light.turn_on
        data:
          brightness_step_pct: 100
        target:
          area_id: living_room
      double_tap_off:
      - service: light.turn_off
        data: {}
        target:
          area_id: living_room
- id: '1668379653327'
  alias: Sunroom - Activity
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.sunroom_motion_occupancy
    - binary_sensor.sunroom_protect_motion
    - binary_sensor.sunroom_motion_any
    to: 'on'
    id: activity
  - platform: state
    id: inactivity
    entity_id:
    - binary_sensor.sunroom_motion_any
    to: 'off'
    for:
      minutes: '{{ states(''input_number.inactivity_timeout_short'')|int }}'
  - platform: template
    value_template: "{{\n        expand(area_entities(area_id(this.entity_id)))\n
      \         |selectattr('domain', 'eq', 'binary_sensor')\n          |selectattr('attributes.device_class',
      'defined')\n          |selectattr('attributes.device_class', 'in', ['motion','occupancy'])\n
      \         |selectattr('state', 'eq', 'off')\n          |selectattr('last_changed',
      'gt', utcnow() - timedelta(minutes=states('input_number.inactivity_timeout_short')|int))\n
      \         |map(attribute='entity_id')\n          |list|length > 0\n}}"
    id: area_inactivity
    enabled: false
  condition:
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: activity
      sequence:
      - service: light.turn_on
        data: {}
        target:
          entity_id: light.sunroom_fan_light
    - conditions:
      - condition: trigger
        id:
        - inactivity
        - area_inactivity
      sequence:
      - alias: Assert no recent motion
        condition: state
        entity_id: binary_sensor.sunroom_motion_any
        state: 'off'
        for:
          minutes: '{{ states(''input_number.inactivity_timeout_short'')|int }}'
      - alias: Assert a fan or light is on
        condition: template
        value_template: "{{\n expand(area_entities(area_id(this.entity_id)))\n |selectattr('domain',
          'in', ['light','fan'])\n |selectattr('state', 'eq', 'on')\n |list|length
          > 0\n}}"
      - service: homeassistant.turn_off
        data: {}
        target:
          entity_id:
          - light.sunroom_fan_light
          - fan.sunroom_fan
  mode: restart
- id: '1671326649922'
  alias: Exterior Door - Chime
  description: Door chime when an exterior door opens
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.mudroom_door_contact
    - binary_sensor.front_door_contact
    - binary_sensor.back_door_contact
    - binary_sensor.attic_door_contact
    to: 'on'
  condition:
  - alias: Assert someone is home
    condition: or
    conditions:
    - condition: state
      entity_id: person.shannon
      state: home
    - condition: state
      entity_id: person.james
      state: home
  - alias: Assert not quiet time
    condition: state
    entity_id: schedule.quiet_time
    state: 'off'
  - alias: Assert not morning run
    condition: state
    entity_id: schedule.morning_run_time
    state: 'off'
  action:
  - alias: Play chime
    service: media_player.play_media
    target:
      entity_id: media_player.all_speakers
    data:
      media_content_id: media-source://media_source/sounds/jump.m4a
      media_content_type: audio/mpeg
  mode: single
- id: '1671588501013'
  alias: Good Night (exterior)
  description: Turn off exterior lights
  trigger:
  - platform: time
    at: input_datetime.trigger_good_night_exterior
  condition: []
  action:
  - alias: Activate good night exterior scene
    scene: scene.dawn
  - alias: Choose random time for next good night trigger
    service: input_datetime.set_datetime
    data:
      datetime: '{{ today_at(''01:00'') + timedelta( days = 1, seconds = range(0,5400)|random|int
        ) }}'
    target:
      entity_id: input_datetime.trigger_good_night_exterior
  mode: single
- id: '1672670675301'
  alias: Attic Light - Double Tap
  description: ''
  use_blueprint:
    path: jlaska/zwave_js_ge_switch_event_handler.yaml
    input:
      device: 5e18ccfb7997e8ccf6bf44ff80f80dd1
      double_tap_on:
      - service: light.turn_on
        data: {}
        target:
          area_id: attic
      double_tap_off:
      - service: light.turn_off
        data: {}
        target:
          area_id: attic
- id: '1673219610594'
  alias: 'Hot Water Pump - Schedule '
  description: 'Turn off pump when away or inactive '
  trigger:
  - platform: state
    enabled: true
    entity_id:
    - schedule.hot_water_pump
    to:
  condition:
  - alias: Assert someone is home
    condition: or
    conditions:
    - condition: state
      entity_id: person.james
      state: home
    - condition: state
      entity_id: person.shannon
      state: home
  - alias: Assert the laundry machine is not on
    not:
    - condition: state
      entity_id: sensor.ms963932g_laundry_machine_state
      state: 'on'
  - condition: state
    entity_id: binary_sensor.kitchen_dishwasher_status
    state: 'off'
  action:
  - alias: Turn on/off the switch
    service: switch.turn_{{ trigger.to_state.state }}
    data: {}
    target:
      entity_id: switch.hot_water_pump_switch_0
  mode: single
- id: '1673283425818'
  alias: Bathroom Fan/Light - Timer (NEW)
  description: Set and turn off entities based on a datetime input helper
  trigger:
  - platform: state
    id: state
    entity_id:
    - light.kitchen_table_light
    to: 'on'
  - platform: event
    id: event
    event_type: timer.finished
    event_data:
      entity_id: timer.kitchen_table_light
  - platform: time
    id: time
    at: input_datetime.kitchen_table_light
  condition: []
  action:
  - choose:
    - alias: Did an entity turn on?
      conditions:
      - condition: trigger
        id: state
      sequence:
      - service: timer.start
        target:
          entity_id: timer.kitchen_table_light
        data:
          duration: 00:10:00
      - service: input_datetime.set_datetime
        target:
          entity_id: input_datetime.kitchen_table_light
        data:
          datetime: '{{ now() + timedelta(minutes=states(''input_number.inactivity_timeout_short'')|int)
            }}'
    - alias: Did a timer expire?
      conditions:
      - condition: trigger
        id: event
      sequence:
      - service: homeassistant.turn_off
        target:
          entity_id: light.kitchen_table_light
        data: {}
    - alias: Did a time pass?
      conditions:
      - condition: trigger
        id: time
      sequence:
      - service: homeassistant.turn_off
        target:
          entity_id: light.kitchen_table_light
        data: {}
  mode: parallel
  max: 8
- id: '1673644598281'
  alias: Downstairs - Activity
  description: Activate scene based on downstairs motion
  use_blueprint:
    path: jlaska/motion_illuminance_activated_entity.yaml
    input:
      motion_sensor:
      - binary_sensor.sunroom_motion_any
      - binary_sensor.mudroom_motion_occupancy
      - binary_sensor.kitchen_motion_any
      - binary_sensor.kitchen_motion_occupancy
      - binary_sensor.kitchen_ep1_pir
      - binary_sensor.kitchen_ep1_mmwave
      - binary_sensor.living_room_motion_any
      - binary_sensor.living_room_ep1_pir
      - binary_sensor.living_room_ep1_mmwave
      - binary_sensor.dining_room_motion_any
      target_entity: scene.downstairs_motion
      illuminance_sensor: sensor.living_room_ep1_illuminance
      illuminance_cutoff: input_number.inactivity_timeout_medium
      no_motion_wait: input_number.inactivity_timeout_medium
      target_off_entity: scene.downstairs_inactivity
      turn_off_blocker_entity: binary_sensor.downstairs_motion_any
- id: '1673646188464'
  alias: Dining Room Light - Activity
  description: ''
  use_blueprint:
    path: jlaska/motion_illuminance_activated_entity.yaml
    input:
      turn_off_blocker_entity: light.entryway_hall_light
      illuminance_cutoff: input_number.illumination_very_low
      target_entity: light.dining_room_light
      illuminance_sensor: sensor.dining_room_motion_illuminance_lux
      no_motion_wait: input_number.inactivity_timeout_long
      target_off_entity: scene.dining_room_inactivity
      motion_sensor: binary_sensor.dining_room_motion_occupancy
      time_limit_after: input_datetime.time_of_day_automation_start
      time_limit_before: input_datetime.time_of_day_automation_stop
- id: '1673809836266'
  alias: Hot Water Pump - Timer
  description: Start/stop the pump timer based on various events
  trigger:
  - platform: event
    event_type:
    - timer.finished
    event_data:
      entity_id: timer.hot_water_pump
  - platform: state
    entity_id:
    - switch.hot_water_pump_switch_0
    not_from:
    - unknown
    - unavailable
    to:
  condition:
  - condition: state
    entity_id: schedule.hot_water_pump
    state: 'off'
  - alias: Assert the laundry machine is not on
    not:
    - condition: state
      entity_id: sensor.ms963932g_laundry_machine_state
      state: 'on'
  - condition: state
    entity_id: binary_sensor.kitchen_dishwasher_status
    state: 'off'
  action:
  - choose:
    - conditions:
      - alias: Timer change event
        condition: template
        value_template: '{{ trigger.platform == ''event'' }}'
      sequence:
      - alias: Turn on/off the switch
        service: switch.turn_{{ trigger.event.event_type == 'timer.started' and 'on'
          or 'off' }}
        data: {}
        target:
          entity_id: switch.hot_water_pump_switch_0
    - conditions:
      - alias: Switch state change
        condition: template
        value_template: '{{ trigger.entity_id == ''switch.hot_water_pump_switch_0''
          }}'
      sequence:
      - alias: Start or cancel timer
        service: timer.{{ trigger.to_state.state == 'on' and 'start' or 'cancel' }}
        data: {}
        target:
          entity_id: timer.hot_water_pump
    default: []
  mode: restart
- id: '1673880320096'
  alias: Vacuum Cycle - Completed
  description: Perform actions when vacuum cycle completed
  trigger:
  - platform: state
    entity_id:
    - vacuum.roomba
    to: docked
    for:
      seconds: 30
  condition:
  - alias: Is it dark in the area?
    condition: or
    conditions:
    - condition: numeric_state
      entity_id: sensor.dining_room_motion_illuminance_lux
      below: input_number.illumination_low
    - condition: numeric_state
      entity_id: sensor.kitchen_motion_illuminance_lux
      below: input_number.illumination_low
    - condition: state
      entity_id: sun.sun
      state: below_horizon
    enabled: false
  action:
  - condition: state
    entity_id: binary_sensor.downstairs_motion_any
    state: 'off'
    for:
      hours: 0
      minutes: 30
      seconds: 0
  - condition: state
    entity_id: media_player.samsung_un55h7100
    state:
    - 'off'
    - unavailable
  - service: light.turn_off
    target:
      area_id:
      - entryway
      - dining_room
      - kitchen
      - living_room
    data: {}
  mode: single
- id: '1674935088917'
  alias: Guest Room Fan Light - Double Tap
  description: ''
  use_blueprint:
    path: jlaska/zwave_js_ge_switch_event_handler.yaml
    input:
      device: ed35f72b87bfeab32193d10ef7c8c51f
      double_tap_on:
      - service: light.turn_on
        data: {}
        target:
          area_id: guest_room
      double_tap_off:
      - service: light.turn_off
        data: {}
        target:
          area_id: guest_room
- id: '1675295889814'
  alias: Notify Sun Phase
  description: ''
  trigger:
  - platform: state
    entity_id:
    - sensor.sun_phase
    attribute: golden_hour
    id: Golden Hour
  - platform: state
    entity_id:
    - sensor.sun_phase
    attribute: blue_hour
    id: Blue Hour
  condition: []
  action:
  - service: script.notify
    data:
      service: notify.mobile_app_james_iphone
      title: Sun Phase
      message: "{{ trigger.id }} {% set sun_attr = trigger.id|contains('Blue') and
        'blue_hour' or 'golden_hour' -%} {% if trigger.to_state.attributes[sun_attr]
        -%}\n  started\n{% else -%}\n  finished\n{% endif -%} at {{ trigger.to_state.last_updated|as_timestamp|timestamp_custom('%I:%M
        %p') }}\n"
      data:
        is_persistent: false
        group: notify-sun-phase
  mode: queued
  max: 2
- id: '1675968216648'
  alias: Hot Water Pump - Announce
  description: Handler for hot water pump state changes
  trigger:
  - platform: state
    entity_id:
    - switch.hot_water_pump_switch_0
    to:
    - 'on'
    - 'off'
  condition: []
  action:
  - enabled: false
    if:
    - condition: template
      value_template: '{{ trigger.to_state.state == ''on'' }}'
    then:
    - service: script.announce
      data:
        entity_id: media_player.all_speakers
        message: The hot water pump is {{ trigger.to_state.state }}
  - service: script.announce
    data:
      entity_id: media_player.all_speakers
      message: The hot water pump is {{ trigger.to_state.state }}
  mode: single
- id: '1676737892733'
  alias: Hot Water Pump - Laundry
  description: 'Turn off pump when away or inactive '
  trigger:
  - platform: state
    entity_id:
    - sensor.ms963932g_laundry_machine_state
    to:
    - Run
    - 'Off'
  condition:
  - alias: Check someone is home
    condition: or
    conditions:
    - condition: state
      entity_id: person.james
      state: home
    - condition: state
      entity_id: person.shannon
      state: home
    enabled: false
  - condition: state
    entity_id: schedule.hot_water_pump
    state: 'off'
  - condition: state
    entity_id: binary_sensor.kitchen_dishwasher_status
    state: 'off'
  - condition: template
    value_template: '{{ trigger.to_state.state|lower in [''run'', ''off''] }}'
    alias: Confirm triggered by expected state changes
  action:
  - alias: Turn on/off the switch
    service: switch.turn_{{ trigger.to_state.state|lower == "off" and "off" or "on"
      }}
    data: {}
    target:
      entity_id: switch.hot_water_pump_switch_0
    enabled: true
  mode: single
- id: '1676836126179'
  alias: Hot Water Pump - Dishwasher
  description: Turn on/off the hot water pump when dishwasher is active
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.kitchen_dishwasher_status
    to:
    - 'on'
    - 'off'
  condition:
  - alias: Check someone is home
    condition: or
    conditions:
    - condition: state
      entity_id: person.james
      state: home
    - condition: state
      entity_id: person.shannon
      state: home
    enabled: false
  - condition: state
    entity_id: schedule.hot_water_pump
    state: 'off'
  - alias: Assert laundry machine is off
    condition: not
    conditions:
    - condition: state
      entity_id: sensor.ms963932g_laundry_machine_state
      state: 'on'
  action:
  - alias: Turn on/off the switch
    service: switch.turn_{{ trigger.to_state.state }}
    data: {}
    target:
      entity_id: switch.hot_water_pump_switch_0
    enabled: true
  mode: single
- id: '1680273000558'
  alias: Notify Person Geofence
  description: Notify based on person state changes
  trigger:
  - platform: state
    entity_id:
    - person.james
    - person.shannon
    from:
    - home
    - not_home
    to:
    - home
    - not_home
  - platform: state
    entity_id:
    - person.kevin
    from: not_home
    to: home
  - platform: state
    entity_id:
    - person.kevin
    from: home
    to: not_home
    for:
      hours: 0
      minutes: 15
      seconds: 0
  condition: []
  action:
  - variables:
      trigger_event: '{{ trigger.to_state.state == ''home'' and ''arrive'' or ''leave''
        }}'
      trigger_zone: zone.home
  - service: script.turn_on
    target:
      entity_id: script.announce
    data:
      variables:
        message: '{{ state_attr(trigger.entity_id, ''friendly_name'') }} {{ trigger.to_state.state
          == ''home'' and ''arrived at'' or ''left'' }} {{ state_attr(''zone.home'',
          ''friendly_name'') }}'
  - service: script.turn_on
    target:
      entity_id: script.zone_geofence_notification
    data:
      variables:
        trigger_event: '{{ trigger.event }}'
        trigger_zone: zone.home
        trigger_person: '{{ trigger.entity_id }}'
  mode: single
- id: '1684540640435'
  alias: Sunroom Activity (new blueprint)
  description: ''
  use_blueprint:
    path: jlaska/activity_and_inactivity_trigger.yaml
    input:
      turn_off_wait: input_number.inactivity_timeout_short
      trigger_entities:
        entity_id:
        - binary_sensor.back_door_contact
        - binary_sensor.sunroom_motion_any
      turn_on_target:
        entity_id: light.sunroom_fan_light
      turn_off_target:
        entity_id:
        - light.sunroom_fan_light
      illuminance_entity: sensor.kitchen_ep1_illuminance
      turn_on_illuminance_cutoff: input_number.inactivity_timeout_short
- id: '1684802508446'
  alias: Mudroom - Activity (new blueprint)
  description: ''
  use_blueprint:
    path: jlaska/activity_and_inactivity_trigger.yaml
    input:
      trigger_entities:
        entity_id:
        - binary_sensor.mudroom_door_contact
        - binary_sensor.mudroom_motion_occupancy
      turn_on_target:
        entity_id: light.mudroom_light
      turn_off_wait: input_number.inactivity_timeout_short
      turn_off_blocker_entity: light.garage_light
      turn_off_target:
        entity_id: light.mudroom_light
- id: '1684803365694'
  alias: Powder Room - Activity (new blueprint)
  description: ''
  use_blueprint:
    path: jlaska/activity_and_inactivity_trigger.yaml
    input:
      turn_off_wait: input_number.inactivity_timeout_short
      turn_off_target:
        entity_id:
        - light.powder_room_light
      turn_on_target:
        entity_id: light.powder_room_light
      trigger_entities:
        entity_id: binary_sensor.powder_room_motion_occupancy
- id: '1684949380060'
  alias: William's Room - Activity (new blueprint)
  description: ''
  use_blueprint:
    path: jlaska/activity_and_inactivity_trigger.yaml
    input:
      turn_off_blocker_entity: schedule.quiet_time
      turn_off_target:
        entity_id:
        - fan.williams_room_fan
        - light.william_s_room_fan_light
        - light.william_s_closet_light
        - light.williams_room_light
        - light.williams_room_floor_lamp
        - light.williams_room_table_lamp
      trigger_entities:
        entity_id:
        - binary_sensor.williams_protect_motion
      turn_on_blocker_entity: schedule.quiet_time
      turn_on_target:
        entity_id: light.williams_room_lamps_zha_group_0x0003
      turn_on_after: input_datetime.time_of_day_shower_automation_start
      turn_on_before: input_datetime.lights_out_kids
      turn_off_wait: input_number.inactivity_timeout_medium
- id: '1684956380650'
  alias: Guest Room - Activity (new blueprint)
  description: ''
  use_blueprint:
    path: jlaska/activity_and_inactivity_trigger.yaml
    input:
      trigger_entities:
        entity_id:
        - binary_sensor.guest_room_motion_any
        - binary_sensor.guest_bathroom_motion_occupancy
      turn_off_target:
        entity_id:
        - fan.guest_room_fan
        - light.guest_room_fan_light
        - light.guest_room_nightstand
        - light.guest_room_closet_light
      turn_off_wait: input_number.inactivity_timeout_medium
      turn_on_blocker_entity: schedule.quiet_time
      turn_on_before: input_datetime.lights_out_kids
      turn_off_blocker_entity: schedule.quiet_time
      turn_on_target:
        entity_id: light.guest_room_nightstand
      turn_on_after: input_datetime.time_of_day_shower_automation_start
- id: '1685537870181'
  alias: Henry's Room - Activity (new blueprint)
  description: ''
  use_blueprint:
    path: jlaska/activity_and_inactivity_trigger.yaml
    input:
      trigger_entities:
        entity_id:
        - binary_sensor.henrys_protect_motion
      turn_off_blocker_entity: schedule.quiet_time
      turn_on_blocker_entity: schedule.quiet_time
      turn_on_after: input_datetime.time_of_day_shower_automation_start
      turn_on_before: input_datetime.lights_out_kids
      turn_off_target:
        entity_id:
        - fan.henrys_room_fan
        - light.henry_s_room_fan_light
        - light.henrys_room_light
        - group.henry_s_room_closet_light
        - light.henrys_room_lamps_zha_group_0x0002
      turn_on_target:
        entity_id: light.henrys_room_lamps_zha_group_0x0002
      turn_off_wait: input_number.inactivity_timeout_long
- id: '1686082188633'
  alias: Master Bedroom - Activity (new blueprint)
  description: ''
  use_blueprint:
    path: jlaska/activity_and_inactivity_trigger.yaml
    input:
      trigger_entities:
        entity_id:
        - binary_sensor.master_bedroom_motion_any
        - binary_sensor.master_bedroom_occupancy
        - binary_sensor.nest_protect_master_bedroom_occupancy
      turn_off_target:
        entity_id:
        - fan.master_bedroom_fan
        - light.master_bedroom_fan_light
        - light.master_bedroom_nightstand
        - light.master_bedroom_light
      turn_off_before: input_datetime.goodnight_start_time
      turn_off_after: input_datetime.time_of_day_automation_start
      turn_on_after: input_datetime.time_of_day_shower_automation_start
      turn_on_target:
        entity_id: light.master_bedroom_nightstand
      turn_off_wait: input_number.inactivity_timeout_short
      illuminance_entity: sensor.master_bedroom_ep1_illuminance
      turn_on_illuminance_cutoff: input_number.inactivity_timeout_short
      turn_on_blocker_entity: schedule.quiet_time
      turn_on_before: input_datetime.lights_out_kids
- id: '1686318000799'
  alias: Master Bathroom - Activity (new blueprint)
  description: ''
  use_blueprint:
    path: jlaska/activity_and_inactivity_trigger.yaml
    input:
      trigger_entities:
        entity_id: binary_sensor.master_bathroom_motion_any
      turn_on_target:
        entity_id: light.master_bathroom_light
      illuminance_entity: sensor.master_bedroom_ep1_illuminance
      turn_on_illuminance_cutoff: input_number.illumination_very_low
      turn_on_after: input_datetime.time_of_day_automation_start
      turn_off_target:
        entity_id: light.master_bathroom_light
      turn_off_wait: input_number.inactivity_timeout_short
      turn_on_before: input_datetime.goodnight_start_time
- id: '1687362323196'
  alias: Downstairs - Activity (new blueprint)
  description: ''
  use_blueprint:
    path: jlaska/activity_and_inactivity_trigger.yaml
    input:
      illuminance_entity: sensor.living_room_ep1_illuminance
      turn_off_wait: input_number.inactivity_timeout_long
      turn_on_illuminance_cutoff: input_number.inactivity_timeout_medium
      turn_on_target:
        entity_id: scene.downstairs_motion
      turn_off_target:
        entity_id:
        - scene.downstairs_inactivity
        - fan.living_room_fan
      trigger_entities:
        entity_id:
        - binary_sensor.living_room_motion_any
        - binary_sensor.living_room_motion_occupancy
        - binary_sensor.living_room_protect_motion
        - binary_sensor.living_room_ep1_occupancy
        - binary_sensor.sunroom_motion_any
        - binary_sensor.sunroom_motion_occupancy
        - binary_sensor.sunroom_protect_motion
        - binary_sensor.kitchen_ep1_mmwave
        - binary_sensor.kitchen_ep1_pir
        - binary_sensor.kitchen_ep1_occupancy
        - binary_sensor.kitchen_motion_occupancy
        - binary_sensor.mudroom_motion_occupancy
      turn_off_blocker_entity: media_player.samsung_un55h7100
- id: '1689514775923'
  alias: Kids Bathroom Light - Double Tap
  description: ''
  use_blueprint:
    path: jlaska/zwave_js_ge_switch_event_handler.yaml
    input:
      device: dcd7d2c5933b6ed43ec7922a2534b7e3
      double_tap_on:
      - service: light.turn_on
        data: {}
        target:
          entity_id: light.kids_bathroom_shower_light
      double_tap_off:
      - service: light.turn_off
        data: {}
        target:
          entity_id: light.kids_bathroom_shower_light
- id: '1689539045768'
  alias: Kids Bathroom Shower Light - Activity
  description: Turn on Shower light during shower time in the evening
  use_blueprint:
    path: jlaska/motion_illuminance_activated_entity.yaml
    input:
      time_limit_after: input_datetime.time_of_day_shower_automation_start
      time_limit_before: input_datetime.time_of_day_automation_stop
      no_motion_wait: input_number.inactivity_timeout_medium
      turn_off_blocker_wait: input_number.inactivity_timeout_long
      motion_sensor: binary_sensor.kids_bathroom_motion_occupancy
      target_entity: light.kids_bathroom_shower_light
      turn_off_blocker_entity: binary_sensor.kids_bathroom_hygrostat
- id: '1689611723404'
  alias: Hot Water Pump - On Demand
  description: Turn off pump when there is demand
  trigger:
  - platform: numeric_state
    entity_id: sensor.hot_water_heater_switch_0_power
    for:
      hours: 0
      minutes: 0
      seconds: 5
    above: 10
  condition:
  - alias: Check someone is home
    condition: or
    conditions:
    - condition: state
      entity_id: person.james
      state: home
    - condition: state
      entity_id: person.shannon
      state: home
    enabled: false
  - condition: or
    conditions:
    - condition: state
      entity_id: binary_sensor.master_bathroom_motion_any
      state: 'on'
    - condition: state
      entity_id: binary_sensor.kids_bathroom_motion_occupancy
      state: 'on'
    - condition: state
      entity_id: binary_sensor.guest_bathroom_motion_occupancy
      state: 'on'
    alias: Confirm occupancy in any bathroom
  - condition: state
    entity_id: switch.hot_water_pump_switch_0
    state: 'off'
  - condition: state
    entity_id: schedule.hot_water_pump
    state: 'off'
  - condition: state
    entity_id: binary_sensor.kitchen_dishwasher_status
    state: 'off'
  - alias: Assert laundry machine is not on
    not:
    - condition: state
      entity_id: sensor.ms963932g_laundry_machine_state
      state: 'on'
  action:
  - alias: Turn on/off the switch
    service: switch.turn_on
    data: {}
    target:
      entity_id: switch.hot_water_pump_switch_0
    enabled: true
  mode: single
- id: '1695232163961'
  alias: Garage Light - Activity (new blueprint)
  description: ''
  use_blueprint:
    path: jlaska/activity_and_inactivity_trigger.yaml
    input:
      trigger_entities:
        entity_id:
        - binary_sensor.mudroom_door_contact
        - binary_sensor.garage_freezer_door_contact
        - binary_sensor.garage_motion_any
        - binary_sensor.garage_door_ajar
      turn_on_target:
        entity_id:
        - light.garage_light
        - light.mudroom_light
      turn_off_target:
        entity_id: light.garage_light
      turn_off_wait: input_number.inactivity_timeout_short
- id: '1696376203190'
  alias: WLED Testing
  description: Turn on/off WLED based on occupancy
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.master_bedroom_motion_any
    to:
  condition:
  - condition: template
    value_template: '{{ trigger.to_state.state != trigger.from_state.state }}'
  - condition: state
    entity_id: schedule.quiet_time
    state: 'off'
  action:
  - if:
    - '{{ trigger.to_state.state == ''on'' }}'
    then:
    - service: switch.turn_on
      data: {}
      target:
        entity_id: switch.wled_b54d68_sync_send
    - service: light.turn_on
      target:
        entity_id:
        - light.wled_b54d68
      data: {}
    - service: select.select_option
      data:
        option: "{{ \n  state_attr('select.wled_b54d68_preset', 'options')|random\n}}\n"
      target:
        entity_id:
        - select.wled_b54d68_preset
    - service: light.turn_on
      data:
        rgb_color:
        - 255
        - 191
        - 137
        brightness: 255
      target:
        entity_id:
        - light.gledopto_led_strip_light_rgb
        - light.gledopto_led_strip_light_cct
    else:
    - service: switch.turn_on
      data: {}
      target:
        entity_id: switch.wled_b54d68_sync_send
    - alias: Turn on/off light
      service: light.turn_off
      target:
        entity_id:
        - light.wled_b54d68
        - light.wled_b63ac0
        - light.gledopto_led_strip_light_rgb
        - light.gledopto_led_strip_light_cct
      data: {}
  mode: parallel
  max: 4
- id: '1696680900067'
  alias: Turn off Harmony When TV Off
  description: ''
  trigger:
  - platform: state
    entity_id:
    - media_player.samsung_un55h7100
    to: unavailable
  condition:
  - condition: not
    conditions:
    - condition: state
      entity_id: remote.hubname
      state: 'off'
  action:
  - service: remote.turn_off
    data: {}
    target:
      entity_id: remote.hubname
  mode: single
- id: '1697236853367'
  alias: Kitchen Activity (new blueprint)
  description: ''
  use_blueprint:
    path: jlaska/activity_and_inactivity_trigger.yaml
    input:
      illuminance_entity: sensor.living_room_ep1_illuminance
      turn_off_wait: input_number.inactivity_timeout_long
      turn_on_illuminance_cutoff: input_number.inactivity_timeout_medium
      turn_on_target:
        entity_id: scene.downstairs_motion
      turn_off_target:
        entity_id:
        - scene.downstairs_inactivity
      trigger_entities:
        entity_id:
        - binary_sensor.kitchen_ep1_mmwave
        - binary_sensor.kitchen_ep1_pir
        - binary_sensor.kitchen_ep1_occupancy
        - binary_sensor.kitchen_motion_occupancy
      turn_off_blocker_entity: media_player.samsung_un55h7100
