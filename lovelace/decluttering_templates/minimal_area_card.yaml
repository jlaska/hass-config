minimal_area_card:
  default:
    - title: null
    - entity: null
    - area: null
    - image: null
    - entities: []
    - height: 200px
    - background_position: 0% 25%
  card:
    type: custom:minimalistic-area-card
    title: '[[title]]'
    card_mod:
      style:
        .: |
          @keyframes vacuum {
            from {transform: rotate( -60deg);}
            to {transform: rotate( 60deg);}
          }
          @keyframes spin {
            0% {
              transform: rotate(0deg);
            }
            100% {
              transform: rotate(359deg);
            }
          }
          @keyframes wiggle {
            0% { transform: rotate(0deg); }
            10% { transform: rotate(-2deg); }
            20% { transform: rotate(-4deg); }
            30% { transform: rotate(-2deg); }
            40% { transform: rotate(0deg); }
            50% { transform: rotate(2deg); }
            60% { transform: rotate(4deg); }
            70% { transform: rotate(2deg); }
            80% { transform: rotate(0deg); }
            90% { transform: rotate(-2deg); }
            95% { transform: rotate(-4deg); }
            100% { transform: rotate(-2deg); }
          }
          ha-card {
            background-color: rgba(0, 100, 150, 0.7);
            padding: 0px;
            aspect-ratio: 16 / 9;
            box-shadow: var( --ha-card-box-shadow, 0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12) );
          }
          ha-card .card-header {
            text-shadow: none;
            text-align: start;
          }
          ha-card .sensors {
            text-align: start;
          }
          .sensors ha-icon-button state-badge {
            __color: white !important;
          }
          .sensors ha-icon-button.state-on {
            color: var(--state-light-on-color, var(--state-light-active-color, var(--state-active-color))) !important;
            __background-color: var(--accent-color);
            __border-radius: 50%;
          }
          .buttons ha-icon-button state-badge {
            color: white !important;
            __fixme__background-color: var(--area-button-color, #727272b2) !important;
            __fixme__border-radius: 50%;
          }
          .box ha-icon-button.state-on state-badge {
            color: var(--state-light-on-color, var(--state-light-active-color, var(--state-active-color))) !important;
          }
          .box ha-icon-button.state-on state-badge[title$='Docked' i],
          .box ha-icon-button.state-on state-badge[title$='Standby' i] {
            color: unset !important;
          }
          .box ha-icon-button.state-on state-badge[title$='Cleaning' i] {
            animation: vacuum 2s infinite alternate;
          }
          .box ha-icon-button.state-on state-badge[title*='Fan:' i] {
            animation: spin 1.5s infinite linear;
          }
          .box ha-icon-button.state-on state-badge[title*='MS963932G' i],
          .box ha-icon-button.state-on state-badge[title*='hygrostat' i] {
            color: lightblue !important;
            animation: wiggle 0.5s linear infinite alternate;
          }
          .box ha-icon-button.state-on state-badge[title*='VS553419C' i] {
            color: red !important;
            animation: wiggle 0.5s linear infinite alternate;
          }
        ha-state-icon$: |
          :host([data-domain=light]) {
            color: var(--state-light-on-color, var(--state-light-active-color, var(--state-active-color))) !important;
          }
          :host([data-domain=fan][data-state=on]) {
            animation: spin 1.5s infinite linear;
          }
    state_color: true
    entity: '[[entity]]'
    area: '[[area]]'
    image: '[[image]]'
    camera_image: '[[entity]]'
    tap_action:
      action: more-info
    entities: '[[entities]]'
