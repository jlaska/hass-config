- platform: template
  sensors:
    # Create several time/date sensors for use in dashboards
    time_hhmm:
      friendly_name: "Time (hh:mm)"
      icon_template: mdi:calendar-clock
      value_template: "{{ as_timestamp(states('sensor.date_time_iso')) | timestamp_custom('%-I:%M %p') }}"
    my_date:
      friendly_name: "Date (friendly)"
      icon_template: mdi:calendar
      value_template: "{{ as_timestamp(states('sensor.date_time_iso')) | timestamp_custom('%A, %B %d') }}"

    # Period of day sensor
    period_of_day:
      friendly_name: Period of the day
      value_template: |
        {%- if is_state('sun.sun','above_horizon') %}
          day
        {%- elif is_state('sun.sun','below_horizon') %}
          {%- if state_attr('sun.sun', 'rising') %}
            {%- if state_attr('sun.sun', 'elevation') < -18.0 %}
              night
            {%- elif state_attr('sun.sun', 'elevation') < -12.0 %}
            astronomical_dawn
            {%- elif state_attr('sun.sun', 'elevation') < -6.0 %}
            nautical_dawn
            {%- elif state_attr('sun.sun', 'elevation') < 0.0 %}
            civil_dawn
            {%- else %}
              unknown
            {%- endif %}
          {%- else %}
            {%- if state_attr('sun.sun', 'elevation') < -18.0 %}
              night
            {%- elif state_attr('sun.sun', 'elevation') < -12.0 %}
            astronomical_twilight
            {%- elif state_attr('sun.sun', 'elevation') < -6.0 %}
            nautical_twilight
            {%- elif state_attr('sun.sun', 'elevation') < 0.0 %}
            civil_twilight
            {%- else %}
              unknown
            {%- endif %}
          {%- endif %}
        {%- endif %}
      icon_template: |
        {%- if (as_timestamp(state_attr('sun.sun','next_dusk'))) - (as_timestamp(state_attr('sun.sun','next_setting'))) < 0 %}
          mdi:weather-sunset-down
        {%- elif (as_timestamp(state_attr('sun.sun','next_rising'))) - (as_timestamp(state_attr('sun.sun','next_dawn'))) < 0 %}
          mdi:weather-sunset-up
        {%- elif is_state('sun.sun','above_horizon') %}
          mdi:weather-sunny
        {%- else %}
          mdi:weather-night
        {%- endif %}

    # Climacel Sensors, see also:
    #   - templates.yaml
    #   - https://community.home-assistant.io/t/ha-card-weather-conditions-setup-with-climacell-tomorrow-io-integration/314398)
    cc_grass_pollen_index_mod:
      friendly_name: Pollen Grass climacell
      icon_template: 'mdi:flower'
      value_template: >-
        {% if is_state('sensor.climacell_grass_pollen_index', 'none') %}
          0
        {% elif is_state('sensor.climacell_grass_pollen_index','very_low') %}
          1
        {% elif is_state('sensor.climacell_grass_pollen_index','low') %}
          2
        {% elif is_state('sensor.climacell_grass_pollen_index','medium') %}
          3
        {% elif is_state('sensor.climacell_grass_pollen_index','high') %}
          4
        {% elif is_state('sensor.climacell_grass_pollen_index','very_high') %}
          5
        {% else %}
          Unknown
        {% endif %}
    cc_tree_pollen_index_mod:
      friendly_name: Pollen Tree climacell
      icon_template: 'mdi:tree'
      value_template: >-
        {% if is_state('sensor.climacell_tree_pollen_index', 'none') %}
          0
        {% elif is_state('sensor.climacell_tree_pollen_index','very_low') %}
          1
        {% elif is_state('sensor.climacell_tree_pollen_index','low') %}
          2
        {% elif is_state('sensor.climacell_tree_pollen_index','medium') %}
          3
        {% elif is_state('sensor.climacell_tree_pollen_index','high') %}
          4
        {% elif is_state('sensor.climacell_tree_pollen_index','very_high') %}
          5
        {% else %}
          Unknown
        {% endif %}
    cc_weed_pollen_index_mod:
      friendly_name: Pollen Weed climacell
      icon_template: 'mdi:sprout'
      value_template: >-
        {% if is_state('sensor.climacell_weed_pollen_index', 'none') %}
          0
        {% elif is_state('sensor.climacell_weed_pollen_index','very_low') %}
          1
        {% elif is_state('sensor.climacell_weed_pollen_index','low') %}
          2
        {% elif is_state('sensor.climacell_weed_pollen_index','medium') %}
          3
        {% elif is_state('sensor.climacell_weed_pollen_index','high') %}
          4
        {% elif is_state('sensor.climacell_weed_pollen_index','very_high') %}
          5
        {% else %}
          Unknown
        {% endif %}

    dining_room_motion_hue_temperature_adjusted:
      friendly_name: "Dining Romo Motion Hue Temperature (adjusted)"
      icon_template: hass:thermometer
      value_template: "{{ states('sensor.dining_room_motion_hue_temperature')|float(0.0) + 3.0 }}"

# Create time sensors
- platform: time_date
  display_options:
    - 'time'
    - 'date'
    - 'date_time'
    - 'date_time_iso'
    - 'time_date'

## CentraLite Plug Energy
#- platform: integration
#  source: sensor.master_bedroom_plug_centralite_electrical_measurement
#  name: master_bedroom_plug_centralite_energy_consumed_yaml
#  unit_prefix: k
#  round: 2
