# Climacel Sensors (https://community.home-assistant.io/t/ha-card-weather-conditions-setup-with-climacell-tomorrow-io-integration/314398)
- sensor:
  - name: cc_temperature
    state: |
      {{ state_attr('weather.climacell_daily','temperature') or state_attr('weather.keener', 'temperature') }}
    unit_of_measurement: °F
  - name: cc_humidity
    state: |
      {{ state_attr('weather.climacell_daily','humidity') or state_attr('weather.keener','humidity') }}
  - name: cc_pressure
    state: |
      {{ state_attr('weather.climacell_daily','pressure') or state_attr('weather.keener','pressure') }}
    unit_of_measurement: Hg
  - name: cc_visibility
    state: |
      {{ state_attr('weather.climacell_daily','visibility') }}
  - name: cc_wind_bearing
    state: |
      {{ state_attr('weather.climacell_daily','wind_bearing') or state_attr('weather.keener','wind_bearing') }}
  - name: cc_wind_speed
    state: |
      {{ state_attr('weather.climacell_daily','wind_speed') or state_attr('weather.keener','wind_speed') }}
  - name: cc_current_conditions
    state: |
      {{ states.weather.climacell_daily.state or states.weather.keener.state }}
  - name: cc_o3
    state: "{{ states('sensor.airnow_o3') }} {{ state_attr('sensor.airnow_o3', 'unit_of_measurement') }}"
  - name: cc_weather_condition_0d
    state: |
      {{ state_attr('weather.climacell_daily','forecast') and state_attr('weather.climacell_daily','forecast')[0].condition or state_attr('weather.keener','forecast')[0].condition }}
  - name: cc_weather_condition_1d
    state: |
      {{ state_attr('weather.climacell_daily','forecast') and state_attr('weather.climacell_daily','forecast')[1].condition or state_attr('weather.keener','forecast')[1].condition }}
  - name: cc_weather_condition_2d
    state: |
      {{ state_attr('weather.climacell_daily','forecast') and state_attr('weather.climacell_daily','forecast')[2].condition or state_attr('weather.keener','forecast')[2].condition }}
  - name: cc_weather_condition_3d
    state: |
      {{ state_attr('weather.climacell_daily','forecast') and state_attr('weather.climacell_daily','forecast')[3].condition or state_attr('weather.keener','forecast')[3].condition }}
  - name: cc_weather_condition_4d
    state: |
      {{ state_attr('weather.climacell_daily','forecast') and state_attr('weather.climacell_daily','forecast')[4].condition or state_attr('weather.keener','forecast')[4].condition }}
  - name: cc_temperature_maximum_0d
    state: |
      {{ state_attr('weather.climacell_daily','forecast') and state_attr('weather.climacell_daily','forecast')[0].temperature or state_attr('weather.keener','forecast')[0].temperature }}
    unit_of_measurement: °F
  - name: cc_temperature_maximum_1d
    state: |
      {{ state_attr('weather.climacell_daily','forecast') and state_attr('weather.climacell_daily','forecast')[1].temperature or state_attr('weather.keener','forecast')[1].temperature }}
    unit_of_measurement: °F
  - name: cc_temperature_maximum_2d
    state: |
      {{ state_attr('weather.climacell_daily','forecast') and state_attr('weather.climacell_daily','forecast')[2].temperature or state_attr('weather.keener','forecast')[2].temperature }}
    unit_of_measurement: °F
  - name: cc_temperature_maximum_3d
    state: |
      {{ state_attr('weather.climacell_daily','forecast') and state_attr('weather.climacell_daily','forecast')[3].temperature or state_attr('weather.keener','forecast')[3].temperature }}
    unit_of_measurement: °F
  - name: cc_temperature_maximum_4d
    state: |
      {{ state_attr('weather.climacell_daily','forecast') and state_attr('weather.climacell_daily','forecast')[4].temperature or state_attr('weather.keener','forecast')[4].temperature }}
    unit_of_measurement: °F
  - name: cc_temperature_minimum_0d
    state: |
      {{ state_attr('weather.climacell_daily','forecast') and state_attr('weather.climacell_daily','forecast')[0].templow or state_attr('weather.keener','forecast')[0].templow }}
    unit_of_measurement: °F
  - name: cc_temperature_minimum_1d
    state: |
      {{ state_attr('weather.climacell_daily','forecast') and state_attr('weather.climacell_daily','forecast')[1].templow or state_attr('weather.keener','forecast')[1].templow }}
    unit_of_measurement: °F
  - name: cc_temperature_minimum_2d
    state: |
      {{ state_attr('weather.climacell_daily','forecast') and state_attr('weather.climacell_daily','forecast')[2].templow or state_attr('weather.keener','forecast')[2].templow }}
    unit_of_measurement: °F
  - name: cc_temperature_minimum_3d
    state: |
      {{ state_attr('weather.climacell_daily','forecast') and state_attr('weather.climacell_daily','forecast')[3].templow or state_attr('weather.keener','forecast')[3].templow }}
    unit_of_measurement: °F
  - name: cc_temperature_minimum_4d
    state: |
      {{ state_attr('weather.climacell_daily','forecast') and state_attr('weather.climacell_daily','forecast')[4].templow or state_attr('weather.keener','forecast')[4].templow }}
    unit_of_measurement: °F
  - name: cc_precipitation_intensity_0d
    state: |
      {{ state_attr('weather.climacell_daily','forecast') and state_attr('weather.climacell_daily','forecast')[0].precipitation or state_attr('weather.keener','forecast')[0].precipitation }}
  - name: cc_precipitation_probability_0d
    state: "{{ state_attr('weather.climacell_daily','forecast') and state_attr('weather.climacell_daily','forecast')[0].precipitation_probability }}"
  - name: cc_precipitation_probability_1d
    state: "{{ state_attr('weather.climacell_daily','forecast') and state_attr('weather.climacell_daily','forecast')[1].precipitation_probability }}"
  - name: cc_precipitation_probability_2d
    state: "{{ state_attr('weather.climacell_daily','forecast') and state_attr('weather.climacell_daily','forecast')[2].precipitation_probability }}"
  - name: cc_precipitation_probability_3d
    state: "{{ state_attr('weather.climacell_daily','forecast') and state_attr('weather.climacell_daily','forecast')[3].precipitation_probability }}"
  - name: cc_precipitation_probability_4d
    state: "{{ state_attr('weather.climacell_daily','forecast') and state_attr('weather.climacell_daily','forecast')[4].precipitation_probability }}"
  - name: cc_particulate_matter_2_5_mm
    state: |
      {{ states('sensor.u_s_main_pollutant') }}
  - name: cc_particulate_matter_10_mm
    state: |
      {{ states('state.climacell_particulate_matter_10_mm')|float(0.0) or states('sensor.airnow_pm10')|float(0.0) }}
  - name: cc_us_epa_air_quality_index
    state: |
      {{ states('sensor.u_s_air_quality_index') }}
  - name: cc_us_epa_health_concern
    state: |
      {{ states('sensor.climacell_us_epa_health_concern')|lower != 'unknown' and states('sensor.climacell_us_epa_health_concern') or states('sensor.u_s_air_pollution_level')|capitalize }}
  - name: "Garage Door Shelly"
    unique_id: sensor.garage_door_shelly
    state: |
      {% if is_state('binary_sensor.shellyplus1_441793a9aca4_input', 'on') %}
        closed
      {% elif is_state('binary_sensor.shellyplus1_441793a9aca4_switch_100_input', 'on') %}
        open
      {% elif states.binary_sensor.shellyplus1_441793a9aca4_switch_100_input.last_updated > states.binary_sensor.shellyplus1_441793a9aca4_input.last_updated %}
        closing
      {% else %}
        opening
      {% endif %}
    availability: "{{ is_state('device_tracker.shellyplus1_441793a9aca4', 'home') }}"

- binary_sensor:
  - name: "Kitchen Dishwasher Status"
    unique_id: binary_sensor.kitchen_dishwasher_status
    availability: "{{ is_state('device_tracker.dishwasher_shelly_shelly', 'home') }}"
    delay_off:
      minutes: 2
    icon: |
      {{ states('sensor.dishwasher_switch_0_power')|float > 2.30 and 'mdi:dishwasher' or 'mdi:dishwasher-off' }}
    state: |
      {{ states('sensor.dishwasher_switch_0_power')|float > 2.30 }}

  - name: "Kitchen Microwave Status"
    unique_id: binary_sensor.kitchen_microwave_status
    availability: "{{ is_state('sensor.node_157_node_status', 'alive') }}"
    icon: |
      {{ states('sensor.microwave_plug_electric_consumption_w')|float > 0.2 and 'mdi:microwave' or 'mdi:microwave-off' }}
    state: |
      {{ states('sensor.microwave_plug_electric_consumption_w')|float > 0.0 }}

  - name: "Garage Motion (any)"
    unique_id: binary_sensor.garage_motion_any
    device_class: motion
    state: |
      {{ is_state('binary_sensor.garage_motion_occupancy', 'on')
         or is_state('binary_sensor.garage_protect_motion', 'on') }}
  - name: "Living Room Motion (any)"
    unique_id: binary_sensor.living_room_motion_any
    device_class: motion
    state: |
      {{ is_state('binary_sensor.living_room_motion_occupancy', 'on')
         or is_state('binary_sensor.living_room_protect_motion', 'on') }}
  - name: "Sunroom Motion (any)"
    unique_id: binary_sensor.sunroom_motion_any
    device_class: motion
    state: |
      {{ is_state('binary_sensor.sunroom_protect_motion', 'on')
         or is_state('binary_sensor.sunroom_motion_occupancy', 'on') }}
  - name: "Dining Room Motion (any)"
    unique_id: binary_sensor.dining_room_motion_any
    device_class: motion
    state: |
      {{ is_state('binary_sensor.dining_room_motion_occupancy', 'on')
         or is_state('binary_sensor.dining_room_protect_motion', 'on') }}
  - name: "Master Bedroom Motion (any)"
    unique_id: binary_sensor.master_bedroom_motion_any
    device_class: motion
    state: |
      {{ is_state('binary_sensor.master_bedroom_motion_occupancy', 'on') }}
  - name: "Master Bathroom Motion (any)"
    unique_id: binary_sensor.master_bathroom_motion_any
    device_class: motion
    state: |
      {{ is_state('binary_sensor.master_bathroom_motion_occupancy', 'on')
         or is_state('binary_sensor.master_bathroom_toilet_motion_occupancy', 'on') }}
  - name: "Downstairs Motion (any)"
    unique_id: binary_sensor.downstairs_motion_any
    device_class: motion
    state: |
      {{ is_state('binary_sensor.mudroom_motion_occupancy', 'on')
         or is_state('binary_sensor.kitchen_motion_any', 'on')
         or is_state('binary_sensor.living_room_motion_any', 'on')
         or is_state('binary_sensor.dining_room_motion_any', 'on')
         or is_state('binary_sensor.sunroom_motion_any', 'on') }}
  - name: "Upstairs Motion (any)"
    unique_id: binary_sensor.upstairs_motion_any
    device_class: motion
    state: |
      {{ is_state('binary_sensor.guest_bathroom_motion_occupancy', 'on')
         or is_state('binary_sensor.guest_room_motion_any', 'on')
         or is_state('binary_sensor.henrys_protect_motion', 'on')
         or is_state('binary_sensor.laundry_room_motion_occupancy', 'on')
         or is_state('binary_sensor.master_bathroom_motion_any', 'on')
         or is_state('binary_sensor.master_bedroom_motion_any', 'on')
         or is_state('binary_sensor.williams_protect_motion', 'on') }}
    # Currently tracked as a helper
    # - name: "Motion (any)"
    #   device_class: motion
    #   unique_id: binary_sensor.motion_any
    #   state: |
    #     {{ is_state('binary_sensor.upstairs_motion_any', 'on')
    #       or is_state('binary_sensor.downstairs_motion_any', 'on') }}
